{"mappings":"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","sources":["src/main/resources/static/js/admin-bundle.js","src/main/resources/static/js/admin.js","src/main/resources/static/js/admin-courses/adminAddCourse.js","src/main/resources/static/js/admin-courses/adminEditCourse.js","src/main/resources/static/js/admin-courses/getModulesOfCourse.js","src/main/resources/static/js/admin-lessons/admin-lesson-edit.js","src/main/resources/static/js/admin-lessons/createLesson.js","src/main/resources/static/js/admin-lessons/generateTest.js","src/main/resources/static/js/admin-lessons/getLessons.js","src/main/resources/static/js/admin-module/admin-module-edit.js","src/main/resources/static/js/admin-module/adminCreateModule.js","src/main/resources/static/js/admin-module/adminDeleteModule.js","src/main/resources/static/js/admin-module/adminUpdateModuleStatus.js","src/main/resources/static/js/admin-module/getModuleLessons.js","src/main/resources/static/js/admin-module/getModules.js","src/main/resources/static/js/admin-offers/deleteOffer.js","src/main/resources/static/js/admin-offers/getOffers.js","src/main/resources/static/js/admin-offers/reponseOffer.js","src/main/resources/static/js/admin-users/editUser.js","src/main/resources/static/js/admin-users/getUsers.js"],"sourcesContent":["import './admin.js';\nimport './admin-courses/adminAddCourse.js';\nimport './admin-courses/adminEditCourse.js';\nimport './admin-courses/getModulesOfCourse.js';\nimport './admin-lessons/admin-lesson-edit.js';\nimport './admin-lessons/createLesson.js';\nimport './admin-lessons/generateTest.js';\nimport './admin-lessons/getLessons.js';\nimport './admin-module/admin-module-edit.js';\nimport './admin-module/adminCreateModule.js';\nimport './admin-module/adminDeleteModule.js';\nimport './admin-module/adminUpdateModuleStatus.js';\nimport './admin-module/getModuleLessons.js';\nimport './admin-module/getModules.js';\nimport './admin-offers/deleteOffer.js';\nimport './admin-offers/getOffers.js';\nimport './admin-offers/reponseOffer.js';\nimport './admin-users/editUser.js';\nimport './admin-users/getUsers.js';","// Original content of admin.js\nasync function getOfferDescription(offerId) {\n    try {\n        const response = await fetch(`/admin/offers/${offerId}`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n\n        if (!response.ok) {\n            throw new Error(`Ошибка HTTP: ${response.status}`);\n        }\n\n        const offerData = await response.json();\n\n        \n        populateModal(offerData);\n\n    } catch (error) {\n        console.error('Ошибка при получении данных заявки:', error);\n        alert('Не удалось загрузить данные заявки');\n    }\n}\n\n// Заполнение модального окна данными\nfunction populateModal(offerData) {\n    $('#offerTitle').text(`Просмотр информации по заявке ${offerData.userId}`);\n    $('#offerTopic').text(offerData.topic);\n    $('#offerDescriptionBody').text(offerData.description)\n\n    // Показываем модальное окно\n    const modal = new bootstrap.Modal(document.getElementById('offerContentModal'));\n    modal.show();\n}\n\n// Обработчик события для закрытия модального окна\ndocument.getElementById('offerContentModal').addEventListener('hidden.bs.modal', function () {\n    // Очищаем поля при закрытии\n    document.getElementById('modalUserId').textContent = '';\n    document.getElementById('modalTopic').textContent = '';\n    document.getElementById('modalDescription').textContent = '';\n});\nfunction switchToView(viewType) {\n    $('.view-content').addClass('d-none')\n    $(`.${viewType}`).removeClass('d-none')\n}\n\nwindow.getOfferDescription = getOfferDescription;\nwindow.switchToView = switchToView;","document.addEventListener('DOMContentLoaded', function() {\n    const form = document.getElementById('addCourseForm');\n    const descriptionTextarea = document.getElementById('courseDescription');\n    const charCount = document.getElementById('charCount');\n    const uploadPlaceholder = document.getElementById('uploadPlaceholder');\n    const fileInput = document.getElementById('courseImage');\n    const imagePreview = document.getElementById('imagePreview');\n    const removeImageBtn = document.getElementById('removeImage');\n    const courseTitle = document.getElementById('courseTitle');\n    const courseSlug = document.getElementById('courseSlug');\n\n    // Счетчик символов для описания\n    descriptionTextarea.addEventListener('input', function() {\n    const length = this.value.length;\n    charCount.textContent = length;\n\n    if (length > 1900) {\n    charCount.classList.add('text-warning');\n} else {\n    charCount.classList.remove('text-warning');\n}\n});\n\n    // Загрузка изображения\n    uploadPlaceholder.addEventListener('click', function() {\n    fileInput.click();\n});\n\n    fileInput.addEventListener('change', function(e) {\n    if (this.files && this.files[0]) {\n    const file = this.files[0];\n\n    // Проверка размера файла\n    if (file.size > 5 * 1024 * 1024) {\n    showAlert('Файл слишком большой. Максимальный размер: 5MB', 'error');\n    this.value = '';\n    return;\n}\n\n    // Показ превью\n    const reader = new FileReader();\n    reader.onload = function(e) {\n    imagePreview.querySelector('img').src = e.target.result;\n    imagePreview.style.display = 'block';\n    uploadPlaceholder.style.display = 'none';\n}\n    reader.readAsDataURL(file);\n}\n});\n\n    // Удаление изображения\n    removeImageBtn.addEventListener('click', function() {\n    fileInput.value = '';\n    imagePreview.style.display = 'none';\n    uploadPlaceholder.style.display = 'block';\n});\n\n    // --- Slug Generation Logic ---\n    let isSlugManuallyEdited = false;\n\n    if (courseTitle && courseSlug) {\n        // Generate slug as user types in the title field\n        courseTitle.addEventListener('input', () => {\n            if (!isSlugManuallyEdited) {\n                generateSlugFromTitle();\n            }\n        });\n\n        // Detect when user edits the slug field manually to disable auto-generation\n        courseSlug.addEventListener('input', () => {\n            isSlugManuallyEdited = true;\n        });\n    }\n\n    function generateSlugFromTitle() {\n        const title = courseTitle.value.trim();\n        if (title) {\n            const translitMap = {\n                'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd', 'е': 'e', 'ё': 'yo', 'ж': 'zh',\n                'з': 'z', 'и': 'i', 'й': 'y', 'к': 'k', 'л': 'l', 'м': 'm', 'н': 'n', 'о': 'o',\n                'п': 'p', 'р': 'r', 'с': 's', 'т': 't', 'у': 'u', 'ф': 'f', 'х': 'h', 'ц': 'ts',\n                'ч': 'ch', 'ш': 'sh', 'щ': 'shch', 'ъ': '', 'ы': 'y', 'ь': '', 'э': 'e', 'ю': 'yu', 'я': 'ya'\n            };\n\n            let slug = title.toLowerCase();\n            let result = '';\n            for (let i = 0; i < slug.length; i++) {\n                result += translitMap[slug[i]] || slug[i];\n            }\n\n            slug = result\n                .replace(/['\"’]/g, '')      // remove quotes\n                .replace(/\\s+/g, '-')       // collapse whitespace and replace by -\n                .replace(/[^a-z0-9-]/g, '') // remove invalid chars\n                .replace(/-+/g, '-')        // collapse dashes\n                .replace(/^-|-$/g, '');     // trim - from start or end\n\n            courseSlug.value = slug;\n        }\n    }\n    // --- End Slug Generation Logic ---\n\n    // Функция очистки формы\n    window.resetForm = function() {\n    form.reset();\n    form.classList.remove('was-validated');\n    charCount.textContent = '0';\n    fileInput.value = '';\n    imagePreview.style.display = 'none';\n    uploadPlaceholder.style.display = 'block';\n};\n\n    // --- Form Submission Logic ---\n    form.addEventListener('submit', async function(event) {\n        // 1. Предотвращаем стандартную отправку формы\n        event.preventDefault();\n        event.stopPropagation();\n\n        // 2. Проверяем валидность формы с помощью Bootstrap\n        if (!form.checkValidity()) {\n            form.classList.add('was-validated');\n            return;\n        }\n\n        // Дополнительная проверка на наличие файла\n        if (fileInput.files.length === 0) {\n            showAlert('Пожалуйста, выберите изображение для курса.', 'error');\n            return;\n        }\n\n        const submitButton = form.querySelector('button[type=\"submit\"]');\n        const originalButtonText = submitButton.innerHTML;\n\n        try {\n            // 3. Показываем индикатор загрузки\n            submitButton.disabled = true;\n            submitButton.innerHTML = '<span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> Создание...';\n\n            // 4. Собираем данные формы с помощью FormData\n            const formData = new FormData(form);\n\n            // 5. Отправляем данные на сервер\n            const response = await fetch('/admin/course/create', {\n                method: 'POST',\n                body: formData\n            });\n\n            // 6. Обрабатываем ответ\n            if (response.status === 201) { // 201 Created\n                showAlert('Курс успешно создан!', 'success');\n                window.resetForm(); // Используем уже существующую функцию для очистки\n            } else {\n                const errorData = await response.json();\n                const errorMessage = errorData.error || Object.values(errorData).join(', ');\n               return null;\n            }\n\n        } catch (error) {\n            showAlert(`Ошибка: ${error.message}`, 'error');\n        } finally {\n            // 7. Возвращаем кнопку в исходное состояние\n            submitButton.disabled = false;\n            submitButton.innerHTML = originalButtonText;\n        }\n    });\n});","let currentPage = 1;\nlet totalPages = 1;\nlet totalItems = 0;\nlet coursesPerPage = 10; // Default courses per page\n\n// --- NEW: Function to switch to the Add Course tab ---\nfunction openAddCourseForm() {\n    const tabLink = document.querySelector('a[data-tab=\"courses-add-tab\"]');\n    if (tabLink) {\n        tabLink.click();\n    } else {\n        showAlert('Не удалось найти вкладку для добавления курса', 'error');\n    }\n}\n\n// --- MODIFIED: Renamed for consistency ---\nfunction changeCoursesPerPage(perPage) {\n    coursesPerPage = parseInt(perPage) || 10;\n    void loadCourses(1);\n}\n\nasync function loadCourses(page = 1) {\n    try {\n        const response = await fetch(`/admin/courses?page=${page}&size=${coursesPerPage}`);\n        if (!response.ok) {\n            return null;\n        }\n        \n        const data = await response.json();\n        if (!data.success || !data.data || !data.data.content) {\n            return null;\n        }\n\n        currentPage = data.data[\"currentPage\"] || page;\n        totalPages = data.data[\"totalPages\"] || 1;\n        totalItems = data.data[\"totalItems\"] || data.data.content.length;\n\n        renderCoursesTable(data.data.content);\n        renderPagination();\n\n    } catch (e) {\n        showAlert(`Ошибка загрузки курсов ${e}`, 'error')\n    }\n}\n\nasync function deleteCourse(courseId, courseTitle) {\n    if (!confirm(`Вы уверены, что хотите удалить курс \"${courseTitle}\"? Это действие удалит все модули и уроки этого курса, и его нельзя будет отменить.`)) {\n        return null;\n    }\n\n    try {\n        const headers = { 'Content-Type': 'application/json' };\n\n        const response = await fetch(`/admin/courses/${courseId}/delete`, {\n            method: 'DELETE',\n            headers: headers\n        });\n\n        const result = await response.json().catch(() => ({}));\n\n        if (response.ok) {\n            showAlert(`Курс \"${courseTitle}\" успешно удален!`, 'success');\n            setTimeout(()=>{\n                loadCourses(currentPage || 1);\n            }, 1500)\n\n        } else {\n            return null;\n        }\n\n    } catch (error) {\n        showAlert(`Ошибка удаления: ${error.message}`, 'error');\n    }\n}\n\n// --- MODIFIED: renderCoursesTable with new header ---\nfunction renderCoursesTable(courses) {\n    const tableContainer = document.querySelector('#courses-edit-tab .card-body');\n    if (!tableContainer) {\n        return;\n    }\n\n    tableContainer.innerHTML = ''; // Clear previous content\n\n    tableContainer.innerHTML = `\n        <div class=\"data-table courses-table\">\n            <div class=\"table-header d-flex justify-content-between align-items-center flex-wrap\">\n                <h3 class=\"table-title mb-2 mb-md-0\">Список курсов</h3>\n                <div class=\"d-flex align-items-center gap-2 flex-wrap\">\n                    <div class=\"page-size-selector\">\n                        <div class=\"input-group input-group-sm\">\n                            <span class=\"input-group-text\">Отображать</span>\n                            <select class=\"form-select\" id=\"pageSizeSelect\" onchange=\"changeCoursesPerPage(this.value)\">\n                                <option value=\"5\">5</option>\n                                <option value=\"10\">10</option>\n                                <option value=\"20\">20</option>\n                                <option value=\"50\">50</option>\n                            </select>\n                        </div>\n                    </div>\n                    <button class=\"btn btn-primary btn-sm\" onclick=\"openAddCourseForm()\">\n                        <i class=\"bi bi-plus-circle me-1\"></i>Новый курс\n                    </button>\n                </div>\n            </div>\n\n            <div class=\"table-content\">\n                <div class=\"table-row header-row\">\n                    <div class=\"table-cell\">ID</div>\n                    <div class=\"table-cell\">Изображение</div>\n                    <div class=\"table-cell\">Название</div>\n                    <div class=\"table-cell\">Описание</div>\n                    <div class=\"table-cell\">URI</div>\n                    <div class=\"table-cell\">Статус</div>\n                    <div class=\"table-cell\">Создан</div>\n                    <div class=\"table-cell\">Обновлен</div>\n                    <div class=\"table-cell\">Действия</div>\n                </div>\n\n                ${courses.length > 0 ? courses.map(course => `\n                <div class=\"table-row\" id=\"course-row-${course.id}\">\n                    <div class=\"table-cell text-muted\">#${course.id || 'N/A'}</div>\n                    <div class=\"table-cell\">\n                        <img src=\"/img/course-brand/${course.image}\" alt=\"Изображение курса\"\n                             class=\"course-image\" data-image-name=\"${course.image}\" onclick=\"openViewCourseImageModal('${course.image}')\" style=\"cursor: pointer\">\n                    </div>\n                    <div class=\"table-cell\">\n                        <div class=\"fw-bold\">${course.title || 'N/A'}</div>\n                    </div>\n                    <div class=\"table-cell\">\n                        <span class=\"course-description\">${course.description || 'N/A'}</span>\n                    </div>\n                    <div class=\"table-cell\">\n                        <code class=\"click-for-redirect\" style=\"cursor: pointer\">/course/${course.slug}</code>\n                    </div>\n                    <div class=\"table-cell\" data-course-id=\"${course.id}\">\n                    ${adaptiveCourseStatus(course.status, course.id)}\n                    </div>\n                    <div class=\"table-cell text-sm text-muted\">${formatCourseDate(course[\"createdAt\"])}</div>\n                    <div class=\"table-cell text-sm text-muted\">${formatCourseDate(course[\"updatedAt\"])}</div>\n                    <div class=\"table-cell action-buttons\">\n                        <button class=\"btn btn-primary btn-icon btn-sm\" title=\"Редактировать\" onclick=\"openEditCourseModal(${course.id})\">\n                            <i class=\"bi bi-pencil\"></i>\n                        </button>\n                        <button class=\"btn btn-primary btn-icon btn-sm\" title=\"Модули\" onclick=\"showCourseModules(${course.id}, '${course.title}')\">\n                            М\n                        </button>\n                        <button class=\"btn btn-danger btn-icon btn-sm\" title=\"Удалить\" onclick=\"deleteCourse(${course.id}, '${course.title}')\">\n                            <i class=\"bi bi-trash\"></i>\n                        </button>\n                    </div>\n                </div>\n                `).join('') : `\n                <div class=\"table-row\">\n                    <div class=\"table-cell\" style=\"grid-column: 1 / -1; text-align: center; padding: 2rem; color: #94a3b8;\">\n                        <i class=\"bi bi-journal-x me-2\"></i>\n                        Курсы не найдены\n                    </div>\n                </div>\n                `}\n            </div>\n        </div>\n\n        <div class=\"pagination-container-edit-course mt-3\"></div>\n    `;\n    document.getElementById('pageSizeSelect').value = coursesPerPage;\n\n    const dropdownToggleElements = tableContainer.querySelectorAll('[data-bs-toggle=\"dropdown\"]');\n    dropdownToggleElements.forEach(dropdownToggleEl => {\n        new bootstrap.Dropdown(dropdownToggleEl);\n    });\n\n    // Force overflow to be visible on table cells to prevent dropdown clipping\n    const tableCells = tableContainer.querySelectorAll('.table-cell');\n    tableCells.forEach(cell => {\n        cell.style.overflow = 'visible';\n    });\n}\n\nfunction adaptiveCourseStatus(status, courseId) {\n    const statusMap = {\n        'ACTIVE': { text: 'Активный', bg: 'success' },\n        'INACTIVE': { text: 'Неактивный', bg: 'secondary' },\n        'ARCHIVED': { text: 'В архиве', bg: 'dark' }\n    };\n\n    const currentStatusInfo = statusMap[status] || { text: 'Неизвестно', bg: 'light' };\n\n    const dropdownItems = Object.keys(statusMap).map(s => {\n        if (s === status) return '';\n        const newStatusInfo = statusMap[s];\n        return `<li><a class=\"dropdown-item\" href=\"#\" onclick=\"event.preventDefault(); updateCourseStatus(${courseId}, '${currentStatusInfo.text}', '${s}', '${newStatusInfo.text}')\">${newStatusInfo.text}</a></li>`;\n    }).join('');\n\n    return `\n        <div class=\"dropdown\">\n            <button class=\"btn btn-sm dropdown-toggle badge rounded-pill text-bg-${currentStatusInfo.bg}\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                ${currentStatusInfo.text}\n            </button>\n            <ul class=\"dropdown-menu\">\n                ${dropdownItems}\n            </ul>\n        </div>\n    `;\n}\n\nasync function updateCourseStatus(courseId, currentStatusText, newStatus, newStatusText) {\n    if (!confirm(`Вы уверены, что хотите изменить статус курса с \"${currentStatusText}\" на \"${newStatusText}\"?`)) {\n        return;\n    }\n\n    const headers = {\n        'Content-Type': 'application/json'\n    };\n\n    try {\n        const response = await fetch(`/admin/courses/update/status`, {\n            method: 'POST',\n            headers: headers,\n            body: JSON.stringify({ courseId: courseId, status: newStatus })\n        });\n\n        const result = await response.json().catch(() => ({}));\n\n        if (response.ok && result.success) {\n            showAlert(`Статус курса успешно изменен на \"${newStatusText}\"!`, 'success');\n            await loadCourses(currentPage);\n        } else {\n            const errorMessage = result.error || `Ошибка сервера: ${response.status}`;\n            throw new Error(errorMessage);\n        }\n    } catch (error) {\n        showAlert(error.message, 'error');\n    }\n}\n\nfunction renderPagination() {\n    const paginationContainer = document.querySelector('.pagination-container-edit-course');\n    if (!paginationContainer) return;\n\n    if (totalPages <= 1) {\n        paginationContainer.innerHTML = '';\n        return;\n    }\n\n    let paginationHTML = `\n        <nav aria-label=\"Page navigation\">\n            <ul class=\"pagination justify-content-center\">\n                <li class=\"page-item ${currentPage === 1 ? 'disabled' : ''}\">\n                    <a class=\"page-link\" href=\"#\" onclick=\"changePage(${currentPage - 1}); return false;\">&laquo;</a>\n                </li>\n    `;\n\n    const maxVisiblePages = 5;\n    let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));\n    let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);\n\n    if (endPage - startPage + 1 < maxVisiblePages) {\n        startPage = Math.max(1, endPage - maxVisiblePages + 1);\n    }\n\n    if (startPage > 1) {\n        paginationHTML += `<li class=\"page-item\"><a class=\"page-link\" href=\"#\" onclick=\"changePage(1); return false;\">1</a></li>`;\n        if (startPage > 2) paginationHTML += `<li class=\"page-item disabled\"><span class=\"page-link\">...</span></li>`;\n    }\n\n    for (let i = startPage; i <= endPage; i++) {\n        paginationHTML += `<li class=\"page-item ${i === currentPage ? 'active' : ''}\"><a class=\"page-link\" href=\"#\" onclick=\"changePage(${i}); return false;\">${i}</a></li>`;\n    }\n\n    if (endPage < totalPages) {\n        if (endPage < totalPages - 1) paginationHTML += `<li class=\"page-item disabled\"><span class=\"page-link\">...</span></li>`;\n        paginationHTML += `<li class=\"page-item\"><a class=\"page-link\" href=\"#\" onclick=\"changePage(${totalPages}); return false;\">${totalPages}</a></li>`;\n    }\n\n    paginationHTML += `\n                <li class=\"page-item ${currentPage === totalPages ? 'disabled' : ''}\">\n                    <a class=\"page-link\" href=\"#\" onclick=\"changePage(${currentPage + 1}); return false;\">&raquo;</a>\n                </li>\n            </ul>\n        </nav>\n        <div class=\"pagination-info text-center mt-2\">\n            <small class=\"text-muted\">Страница ${currentPage} из ${totalPages} • Всего курсов: ${totalItems}</small>\n        </div>\n    `;\n\n    paginationContainer.innerHTML = paginationHTML;\n}\n\nfunction changePage(page) {\n    if (page < 1 || page > totalPages || page === currentPage) return;\n    void loadCourses(page);\n}\n\nfunction formatCourseDate(dateString) {\n    if (!dateString) return 'Не указано';\n    try {\n        const date = new Date(dateString);\n        return date.toLocaleDateString('ru-RU', { year: 'numeric', month: '2-digit', day: '2-digit' });\n    } catch (e) {\n        return dateString;\n    }\n}\n\nfunction openViewCourseImageModal(img) {\n    if (!document.getElementById('viewImageModal')) {\n        renderImageViewModal();\n    }\n    const modalImg = document.getElementById('modalImgCourse');\n    if (modalImg) {\n        modalImg.src = `/img/course-brand/${img}`;\n        modalImg.alt = `Изображение курса: ${img}`;\n    }\n    const modalElement = document.getElementById('viewImageModal');\n    if (modalElement) {\n        const modal = new bootstrap.Modal(modalElement);\n        modal.show();\n    }\n}\n\nfunction renderImageViewModal() {\n    if (!document.getElementById('viewImageModal')) {\n        document.getElementById('img-view-modal').innerHTML += `\n            <div class=\"modal fade\" id=\"viewImageModal\" tabindex=\"-1\" aria-hidden=\"true\">\n                <div class=\"modal-dialog modal-lg\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title\">Изображение курса</h5>\n                            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                        </div>\n                        <div class=\"modal-body text-center\">\n                            <img id=\"modalImgCourse\" class=\"img-fluid\" style=\"max-height: 70vh; object-fit: contain;\">\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Закрыть</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `;\n    }\n}\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    const coursesTabTrigger = document.querySelector('a[data-tab=\"courses-edit-tab\"]');\n    const coursesContainer = document.getElementById('courses-edit-tab');\n\n    if (coursesContainer) {\n        coursesContainer.addEventListener('click', function (event) {\n            if (event.target && event.target.classList.contains('click-for-redirect')) {\n                const url = event.target.textContent.trim();\n                if (url) {\n                    window.location.href = url;\n                }\n            }\n\n            \n        });\n    }\n    \n    if (coursesTabTrigger) {\n        let isInitialized = false;\n        coursesTabTrigger.addEventListener('click', () => {\n            if (!isInitialized) {\n                void loadCourses(1);\n                renderImageViewModal();\n                renderEditCourseModal(); // Render the edit modal structure on tab click\n                isInitialized = true;\n            }\n        });\n\n        if (document.getElementById('courses-edit-tab')?.classList.contains('active')) {\n            void loadCourses(1);\n            renderImageViewModal();\n            renderEditCourseModal(); // Also render here if the tab is already active\n            isInitialized = true;\n        }\n    }\n});\n\n// --- NEW: Functions for Edit Course Modal ---\n\nfunction renderEditCourseModal() {\n    if (document.getElementById('editCourseModal')) {\n        return; // Already rendered\n    }\n\n    const modalHTML = `\n        <div class=\"modal fade\" id=\"editCourseModal\" tabindex=\"-1\" aria-labelledby=\"editCourseModalLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog modal-lg\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\" id=\"editCourseModalLabel\">Редактировать курс</h5>\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    </div>\n                    <div class=\"modal-body\">\n                        <form id=\"editCourseForm\" onsubmit=\"handleCourseUpdate(event)\">\n                            <input type=\"hidden\" id=\"editCourseId\" name=\"id\">\n                            \n                            <div class=\"mb-3\">\n                                <label for=\"editCourseTitle\" class=\"form-label\">Название</label>\n                                <input type=\"text\" class=\"form-control\" id=\"editCourseTitle\" name=\"title\" required minlength=\"2\" maxlength=\"100\">\n                            </div>\n                            \n                            <div class=\"mb-3\">\n                                <label for=\"editCourseDescription\" class=\"form-label\">Описание</label>\n                                <textarea class=\"form-control\" id=\"editCourseDescription\" name=\"description\" rows=\"3\" required minlength=\"2\" maxlength=\"100\"></textarea>\n                            </div>\n                            \n                            <div class=\"mb-3\">\n                                <label for=\"editCourseSlug\" class=\"form-label\">URI (Slug)</label>\n                                <input type=\"text\" class=\"form-control\" id=\"editCourseSlug\" name=\"slug\" required minlength=\"2\" maxlength=\"100\">\n                            </div>\n\n                            <div class=\"mb-3\">\n                                <label for=\"editCourseImage\" class=\"form-label\">Изображение курса</label>\n                                <input class=\"form-control\" type=\"file\" id=\"editCourseImage\" name=\"image\" accept=\"image/png, image/jpeg, image/gif\">\n                                <div class=\"mt-2\">\n                                    <small class=\"text-muted\">Текущее изображение:</small>\n                                    <img id=\"currentCourseImage\" src=\"\" alt=\"Current Image\" class=\"img-thumbnail mt-1\" style=\"max-width: 150px;\">\n                                </div>\n                            </div>\n                            \n                            <div class=\"modal-footer\">\n                                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Отмена</button>\n                                <button type=\"submit\" class=\"btn btn-primary\">Сохранить изменения</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `;\n    document.body.insertAdjacentHTML('beforeend', modalHTML);\n}\n\nasync function openEditCourseModal(courseId) {\n    const modalElement = document.getElementById('editCourseModal');\n    if (!modalElement) {\n        return;\n    }\n\n    const courseRow = document.getElementById(`course-row-${courseId}`);\n    if (!courseRow) {\n        showAlert('Не удалось найти данные для курса.', 'error');\n        return;\n    }\n\n    // Extract data from the table row\n    const title = courseRow.querySelector('.fw-bold').textContent.trim();\n    const description = courseRow.querySelector('.course-description').textContent.trim();\n    const slug = courseRow.querySelector('code').textContent.replace('/courses/', '').trim();\n    const imageUrl = courseRow.querySelector('.course-image').src;\n\n    // Populate the form\n    document.getElementById('editCourseId').value = courseId;\n    document.getElementById('editCourseTitle').value = title;\n    document.getElementById('editCourseDescription').value = description;\n    document.getElementById('editCourseSlug').value = slug;\n    document.getElementById('currentCourseImage').src = imageUrl;\n    document.getElementById('editCourseImage').value = ''; // Clear file input\n\n    const modal = new bootstrap.Modal(modalElement);\n    modal.show();\n}\n\nasync function handleCourseUpdate(event) {\n    event.preventDefault();\n    const form = event.target;\n    const formData = new FormData(form);\n    const courseId = formData.get('id');\n    const courseTitle = formData.get('title');\n\n    const headers = {};\n\n    try {\n        // NOTE: The backend endpoint /admin/courses/update is assumed to exist.\n        // It should handle a multipart/form-data POST request.\n        const response = await fetch('/admin/courses/update', {\n            method: 'POST',\n            headers: headers,\n            body: formData\n        });\n\n        const result = await response.json().catch(() => ({}));\n\n        if (response.ok && result.success) {\n            showAlert(`Курс \"${courseTitle}\" успешно обновлен!`, 'success');\n            const modal = bootstrap.Modal.getInstance(document.getElementById('editCourseModal'));\n            modal.hide();\n            void loadCourses(currentPage); // Refresh the table\n        } else {\n            // Prefer a server-sent message, otherwise use a generic one.\n            const errorMessage = result.error || `Ошибка сервера: ${response.status}`;\n            return null;\n        }\n    } catch (error) {\n        showAlert(`Ошибка обновления: ${error.message}`, 'error');\n    }\n}\n\nwindow.openAddCourseForm = openAddCourseForm;\nwindow.changeCoursesPerPage = changeCoursesPerPage;\nwindow.deleteCourse = deleteCourse;\nwindow.changePage = changePage;\nwindow.openViewCourseImageModal = openViewCourseImageModal;\nwindow.openEditCourseModal = openEditCourseModal;\nwindow.handleCourseUpdate = handleCourseUpdate;\nwindow.updateCourseStatus = updateCourseStatus;\nwindow.loadCourses = loadCourses;\n","// Глобальные переменные\nlet currentCourse = null;\nlet courseModules = [];\n\n// Функция открытия модального окна с модулями курса\nasync function openCourseModulesModal(courseId) {\n    try {\n        // Загружаем модули курса\n        const response = await fetch(`/admin/courses/${courseId}/modules`);\n        if (!response.ok) {\n            if (response.status === 404) {\n                showAlert('В этом модуле нет курсов', 'info');\n            } else {\n                showAlert('Ошибка загрузки модулей курса', 'error');\n            }\n            return;\n        }\n\n        const data = await response.json();\n        if (!data.success || !Array.isArray(data.data)) { // Проверяем, что data.data - это массив\n            showAlert(data.message || 'Модулей нет', 'info');\n            courseModules = []; // Устанавливаем пустой массив, если данные неверны\n            currentCourse = { id: courseId, name: \"Неизвестный курс\" }; // Устанавливаем дефолтное имя\n            return; // Выходим из функции, так как нет данных\n        }\n\n        courseModules = data.data || []; // Теперь data.data - это сам массив модулей\n        // Проверяем, что courseModules не пустой, прежде чем обращаться к первому элементу\n        currentCourse = { id: courseId, name: courseModules.length > 0 ? courseModules[0][\"courseName\"] : \"Неизвестный курс\" };\n\n        // Рендерим модальное окно\n        renderCourseModulesModal();\n\n        // Показываем модальное окно\n        const modalElement = document.getElementById('courseModulesModal');\n        if (!modalElement) {\n            return null;\n        }\n\n        const modal = new bootstrap.Modal(modalElement);\n        // noinspection JSUnresolvedReference\n        modal.show();\n\n    } catch (error) {\n    }\n}\n\n// Функция рендеринга модального окна\nfunction renderCourseModulesModal() {\n    const modalContainer = document.getElementById('courseModulesModal');\n\n    if (!modalContainer) {\n        // Создаем модальное окно если его нет\n        createModulesModalElement();\n        return;\n    }\n\n    // Заполняем заголовок\n    const modalTitle = modalContainer.querySelector('.modal-title');\n    if (modalTitle) {\n        modalTitle.textContent = `Модули курса: ${currentCourse.name}`;\n    }\n\n    if(courseModules.length > 0) {\n        document.getElementById('modulesCount').innerText = `Модулей: ${courseModules.length}`\n    }\n\n    // Заполняем список модулей\n    const modulesList = modalContainer.querySelector('#modulesList');\n    if (modulesList) {\n        modulesList.innerHTML = courseModules.length > 0 ?\n            renderModulesList() :\n            '<div class=\"text-center py-4 text-muted\">Модули не найдены</div>';\n    }\n}\n\n// Функция рендеринга списка модулей\nfunction renderModulesList() {\n    return courseModules.map((module, index) => `\n        <div class=\"module-item\" data-module-id=\"${module.moduleId}\">\n            <div class=\"module-header d-flex justify-content-between align-items-center\">\n                <div class=\"module-info\">\n                    <h6 class=\"module-title mb-1\">${module.order || index + 1}. ${escapeHtml(module[\"moduleTitle\"] || 'Без названия')}</h6>\n                    <small class=\"text-muted\">ID: ${module.moduleId} • ${module[\"lessonsCount\"] || 0} уроков</small>\n                </div>\n                <div class=\"module-actions\">\n                    <button class=\"btn btn-sm btn-outline-primary me-1\" onclick=\"editModule(${module.id})\">\n                        <i class=\"fas fa-edit\"></i>\n                    </button>\n                    <a class=\"btn btn-sm btn-outline-danger\" href=\"/admin/modules\">\n                        <i class=\"fas fa-trash\"></i>\n                    </a>\n                </div>\n            </div>\n            <hr class=\"my-2\">\n        </div>\n    `).join('');\n}\n\n// Функция создания элемента модального окна\nfunction createModulesModalElement() {\n    const modalHTML = `\n        <div class=\"modal fade\" id=\"courseModulesModal\" tabindex=\"-1\" aria-hidden=\"true\">\n            <div class=\"modal-dialog modal-lg\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\">Модули курса</h5>\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    </div>\n                    <div class=\"modal-body\">\n                        <div class=\"d-flex justify-content-between align-items-center mb-3\">\n                            <span class=\"text-muted\" id=\"modulesCount\">Модулей: 0</span>\n                            <a class=\"btn btn-success btn-sm\" href=\"/admin/modules\">\n                                <i class=\"fas fa-plus me-1\"></i> Добавить модуль\n                            </a>\n                        </div>\n                        \n                        <div id=\"modulesList\" class=\"modules-list\">\n                            <div class=\"text-center py-4 text-muted\">\n                                <i class=\"fas fa-spinner fa-spin me-2\"></i>\n                                Загрузка модулей...\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Закрыть</button>\n                        <button type=\"button\" class=\"btn btn-primary\" onclick=\"manageCourse(${currentCourse?.id})\">\n                            Управление курсом\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `;\n\n    // Добавляем модальное окно в body\n    document.body.insertAdjacentHTML('beforeend', modalHTML);\n    renderCourseModulesModal();\n}\n\n// Вспомогательные функции\nfunction escapeHtml(text) {\n    if (text === null || text === undefined) return '';\n    const div = document.createElement('div');\n    div.textContent = text;\n    return div.innerHTML;\n}\n\nfunction formatDate(dateString) {\n    if (!dateString) return 'Не указано';\n    try {\n        const date = new Date(dateString);\n        return date.toLocaleDateString('ru-RU');\n    } catch (e) {\n        return dateString;\n    }\n}\n\n// Функции действий (заглушки)\nfunction addNewModule() {\n    alert(`Добавление модуля для курса: ${currentCourse?.name}`);\n}\n\nfunction editModule(moduleId) {\n    showAlert(`Редактирование модуля: ${moduleId}`, 'info');\n}\n\nfunction manageCourse(courseId) {\n    // Переход на страницу управления курсом\n    window.location.href = `/admin/courses/${courseId}/edit`;\n}\n\n// Обновляем функцию в основном скрипте для вызова модального окна\nfunction showCourseModules(courseId, courseName) {\n    void openCourseModulesModal(courseId, courseName);\n}\n\n// Инициализация при загрузке страницы\ndocument.addEventListener('DOMContentLoaded', function() {\n    // Обработчик для закрытия модального окна\n    document.addEventListener('hidden.bs.modal', function(event) {\n        if (event.target.id === 'courseModulesModal') {\n            // Очищаем данные при закрытии\n            currentCourse = null;\n            courseModules = [];\n        }\n    });\n});\n\nwindow.addNewModule = addNewModule;\nwindow.editModule = editModule;\nwindow.manageCourse = manageCourse;\nwindow.showCourseModules = showCourseModules;","document.addEventListener('DOMContentLoaded', function () {\n\n    const editLessonModal = new bootstrap.Modal(document.getElementById('editLessonModal'));\n    const editLessonForm = document.getElementById('editLessonForm');\n\n    // Инициализация TinyMCE\n    function initTinyMCE(content = '') {\n        tinymce.remove('#editLessonTextContent'); // Удаляем предыдущий инстанс, если он был\n        tinymce.init({\n            selector: '#editLessonTextContent',\n            plugins: 'code table lists image link',\n            toolbar: 'undo redo | blocks | bold italic | alignleft aligncenter alignright | indent outdent | bullist numlist | code | image | link',\n            height: 400,\n            setup: function (editor) {\n                editor.on('init', function () {\n                    editor.setContent(content);\n                });\n            }\n        });\n    }\n\n    // Глобальный обработчик кликов для делегирования событий\n    document.body.addEventListener('click', async function (event) {\n        const editButton = event.target.closest('.edit-lesson-btn');\n        if (editButton) {\n            const lessonId = editButton.dataset.lessonId;\n            if (!lessonId) return;\n\n            // 1. Получаем данные урока с бэкенда\n            try {\n                const response = await fetch(`/api/admin/lessons/${lessonId}`);\n                const result = await response.json();\n\n                if (!response.ok || !result.success) {\n                    const errorMsg = result.message || 'Не удалось загрузить данные урока.';\n                    showAlert(errorMsg, 'error');\n                    return;\n                }\n                const lessonData = result.data; // Data is in result.data\n\n                // 2. Заполняем форму\n                document.getElementById('editLessonId').value = lessonId;\n                document.getElementById('editLessonTitle').value = lessonData.title;\n                document.getElementById('editLessonVideoUrl').value = lessonData.videoUrl;\n\n                // 3. Инициализируем TinyMCE с контентом\n                initTinyMCE(lessonData.textContent || '');\n\n                // 4. Показываем модальное окно\n                editLessonModal.show();\n\n            } catch (error) {\n                showAlert(error.message, 'error');\n            }\n        }\n    });\n\n    // Обработчик отправки формы\n    editLessonForm.addEventListener('submit', async function (event) {\n        event.preventDefault();\n\n        const lessonId = document.getElementById('editLessonId').value;\n        const title = document.getElementById('editLessonTitle').value;\n        const videoUrl = document.getElementById('editLessonVideoUrl').value;\n        const textContent = tinymce.get('editLessonTextContent').getContent();\n\n        const lessonDto = {\n            title,\n            videoUrl,\n            textContent\n        };\n\n        try {\n            const response = await fetch(`/api/admin/lessons/${lessonId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(lessonDto)\n            });\n\n            const result = await response.json();\n\n            if (!response.ok || !result.success) {\n                const errorMessage = result.message || 'Произошла ошибка при сохранении.';\n                throw new Error(errorMessage);\n            }\n\n            // Успех\n            editLessonModal.hide();\n            showAlert(result.message || 'Урок успешно обновлен!', 'success');\n            // Обновляем таблицу уроков, чтобы увидеть изменения\n            if (typeof loadLessons === 'function') {\n                loadLessons();\n            }\n\n        } catch (error) {\n            showAlert(error.message, 'error');\n        }\n    });\n});\n","// Глобальные переменные\nlet modulesList = [];\n\n// Инициализация формы\nfunction initCreateLessonForm() {\n    loadModules();\n    bindFormEvents();\n}\n\n// Загрузка списка модулей\nasync function loadModules() {\n    try {\n        const response = await fetch('/admin/modules/json');\n        if (response.ok) {\n            const data = await response.json();\n            if (data.success && data.data) {\n                modulesList = data.data;\n                populateModulesSelect();\n            }\n        }\n    } catch (error) {\n        showAlert('Не удалось загрузить список модулей', 'error');\n    }\n}\n\n// Заполнение select модулей\nfunction populateModulesSelect() {\n    const select = document.getElementById('moduleId');\n    select.innerHTML = '<option value=\"\">Выберите модуль</option>';\n\n    modulesList.forEach(module => {\n        const option = document.createElement('option');\n        option.value = module.moduleId;\n        if(module.moduleStatus === \"ACTIVE\") {\n            option.textContent = `(Курс: ${module.courseName}) Модуль: ${module.moduleTitle}`;\n        } else {\n            option.textContent = `НЕАКТИВЕН (Курс: ${module.courseName}) Модуль: ${module.moduleTitle}`;\n            option.disabled = true;\n        }\n        select.appendChild(option);\n    });\n}\n\n// Привязка событий формы\nfunction bindFormEvents() {\n    const submitBtn = document.getElementById('submitLessonBtn');\n    const form = document.getElementById('createLessonForm');\n\n    if (submitBtn) {\n        submitBtn.addEventListener('click', handleLessonSubmit);\n    }\n\n    if (form) {\n        form.addEventListener('submit', function(e) {\n            e.preventDefault();\n            handleLessonSubmit();\n        });\n    }\n\n    // Очистка формы при закрытии модального окна\n    const modal = document.getElementById('createLessonModal');\n    if (modal) {\n        modal.addEventListener('hidden.bs.modal', resetForm);\n    }\n}\n\n// Обработчик отправки формы\nasync function handleLessonSubmit() {\n    if (!validateLessonForm()) {\n        return;\n    }\n\n    try {\n        showLoading(true);\n\n        const formData = new FormData();\n        formData.append('file', document.getElementById('videoFile').files[0]);\n        formData.append('moduleId', document.getElementById('moduleId').value);\n        formData.append('title', document.getElementById('lessonTitle').value);\n        formData.append('description', document.getElementById('description').value);\n        formData.append('shortDescription', document.getElementById('shortDescription').value);\n        formData.append('testCode', document.getElementById('testCode').value);\n\n        const response = await fetch('/admin/lesson/upload', {\n            method: 'POST',\n            body: formData\n        });\n\n        const result = await response.json();\n\n        if (response.ok) {\n            handleSuccessResponse(result);\n        } else {\n            handleErrorResponse(result);\n        }\n\n    } catch (error) {\n        showAlert('Произошла ошибка при создании урока', 'error');\n    } finally {\n        showLoading(false);\n    }\n}\n\n// Валидация формы\nfunction validateLessonForm() {\n    const form = document.getElementById('createLessonForm');\n\n    if (!form.checkValidity()) {\n        form.reportValidity();\n        return false;\n    }\n\n    // Проверка размера файла (максимум 500MB)\n    const fileInput = document.getElementById('videoFile');\n    if (fileInput.files[0] && fileInput.files[0].size > 200 * 1024 * 1024) {\n        showAlert('Размер файла не должен превышать 200MB', 'error');\n        return false;\n    }\n\n    return true;\n}\n\n// Обработка успешного ответа\nfunction handleSuccessResponse(result) {\n    showAlert('Урок успешно создан!', 'success');\n\n    // Закрываем модальное окно\n    const modal = bootstrap.Modal.getInstance(document.getElementById('createLessonModal'));\n    modal.hide();\n\n    void loadLessons()\n}\n\n// Обработка ошибки\nfunction handleErrorResponse(result) {\n    const errorMessage = result.message || 'Не удалось создать урок';\n    showAlert(errorMessage, 'error');\n\n    // Дополнительная обработка специфических ошибок\n    if (result.message && result.message.includes('file')) {\n        highlightFileInput();\n    }\n}\n\n// Сброс формы\nfunction resetForm() {\n    document.getElementById('createLessonForm').reset();\n    removeValidationStyles();\n}\n\n// Удаление стилей валидации\nfunction removeValidationStyles() {\n    const inputs = document.querySelectorAll('#createLessonForm .is-invalid');\n    inputs.forEach(input => {\n        input.classList.remove('is-invalid');\n    });\n}\n\n// Подсветка поля файла\nfunction highlightFileInput() {\n    const fileInput = document.getElementById('videoFile');\n    fileInput.classList.add('is-invalid');\n}\n\n// Показать/скрыть загрузку\nfunction showLoading(show) {\n    const submitBtn = document.getElementById('submitLessonBtn');\n    if (submitBtn) {\n        if (show) {\n            submitBtn.disabled = true;\n            submitBtn.innerHTML = '<i class=\"fas fa-spinner fa-spin me-1\"></i> Создание...';\n        } else {\n            submitBtn.disabled = false;\n            submitBtn.innerHTML = '<i class=\"fas fa-plus me-1\"></i> Создать урок';\n        }\n    }\n}\n\n// Функция для открытия модального окна\nfunction openCreateLessonModal() {\n    // Загружаем модули если еще не загружены\n    if (modulesList.length === 0) {\n        loadModules();\n    }\n\n    const modal = new bootstrap.Modal(document.getElementById('createLessonModal'));\n    modal.show();\n}\n\n// Инициализация при загрузке документа\ndocument.addEventListener('DOMContentLoaded', function() {\n    initCreateLessonForm();\n\n    // Добавляем кнопку открытия модального окна если нужно\n    const addButton = document.querySelector('[onclick=\"openCreateLessonModal()\"]');\n    if (addButton) {\n        addButton.addEventListener('click', openCreateLessonModal);\n    }\n});\n\n// CSS стили для формы\nconst formStyles = `\n#createLessonModal .modal-content {\n    background: var(--card-bg);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n#createLessonModal .modal-header {\n    background: var(--primary-gradient);\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n#createLessonModal .modal-title {\n    color: white;\n    font-weight: 600;\n}\n\n#createLessonModal .form-select {\n    background-color: rgba(255, 255, 255, 0.05);\n    border-color: rgba(255, 255, 255, 0.1);\n    color: #e2e8f0;\n}\n\n#createLessonModal .form-select option {\n    background-color: var(--card-bg);\n    color: #e2e8f0;\n}\n\n#createLessonModal .form-control:focus,\n#createLessonModal .form-select:focus {\n    background: rgba(255, 255, 255, 0.12);\n    border-color: #6366f1;\n    box-shadow: 0 0 0 0.25rem rgba(99, 102, 241, 0.25);\n    color: #e2e8f0;\n}\n\n#createLessonModal .is-invalid {\n    border-color: #ef4444 !important;\n}\n\n#createLessonModal .form-text {\n    color: #94a3b8;\n    font-size: 0.875rem;\n}\n`;\n\n// Добавляем стили в документ\nconst styleSheet = document.createElement('style');\nstyleSheet.textContent = formStyles;\ndocument.head.appendChild(styleSheet);\n\nwindow.openCreateLessonModal = openCreateLessonModal;","document.addEventListener('DOMContentLoaded', function () {\n    const testGeneratorTab = document.getElementById('create-lesson-test-tab');\n\n    // Если на странице нет вкладки генератора тестов, ничего не делаем.\n    if (!testGeneratorTab) {\n        return;\n    }\n\n    const questionsContainer = testGeneratorTab.querySelector('#questionsContainer');\n    const testGeneratorForm = testGeneratorTab.querySelector('#testGeneratorForm');\n\n    let questionCounter = 0;\n\n    function createQuestionNode(questionIndex) {\n        const questionId = `question-${questionIndex}`;\n        const node = document.createElement('div');\n        node.className = 'card bg-dark border-secondary mb-4 question-card';\n        node.id = questionId;\n\n        node.innerHTML = `\n            <div class=\"card-header d-flex justify-content-between align-items-center\">\n                <h6 class=\"mb-0\">Вопрос <span class=\"question-number\">${questionIndex + 1}</span></h6>\n                <button type=\"button\" class=\"btn btn-outline-danger btn-sm remove-question-btn\">\n                    <i class=\"bi bi-trash\"></i> Удалить\n                </button>\n            </div>\n            <div class=\"card-body\">\n                <div class=\"mb-3\">\n                    <label for=\"${questionId}-text\" class=\"form-label\">Текст вопроса:</label>\n                    <input type=\"text\" id=\"${questionId}-text\" class=\"form-control question-text\" placeholder=\"Введите текст вопроса\" required>\n                </div>\n                <div class=\"answers-container\">\n                    <label class=\"form-label\">Варианты ответов (отметьте правильный):</label>\n                    ${[0, 1, 2].map(answerIndex => `\n                        <div class=\"input-group mb-2\">\n                            <input type=\"text\" class=\"form-control answer-text\" placeholder=\"Вариант ответа ${answerIndex + 1}\" required>\n                            <div class=\"input-group-text\">\n                                <input class=\"form-check-input correct-answer-radio\" type=\"radio\" name=\"${questionId}-correct\" value=\"${answerIndex}\" required>\n                            </div>\n                        </div>\n                    `).join('')}\n                </div>\n            </div>\n        `;\n\n        node.querySelector('.remove-question-btn').addEventListener('click', function() {\n            node.remove();\n            updateQuestionNumbers();\n        });\n\n        return node;\n    }\n\n    function updateQuestionNumbers() {\n        const allQuestions = questionsContainer.querySelectorAll('.question-card');\n        allQuestions.forEach((question, index) => {\n            question.querySelector('.question-number').textContent = index + 1;\n        });\n    }\n\n    function addNewQuestion() {\n        const newNode = createQuestionNode(questionCounter);\n        questionsContainer.appendChild(newNode);\n        questionCounter++;\n        updateQuestionNumbers();\n    }\n\n    // --- ИСПРАВЛЕНИЕ: Используем делегирование событий ---\n    testGeneratorTab.addEventListener('click', function(event) {\n        // Проверяем, был ли клик по кнопке \"Добавить вопрос\"\n        if (event.target && event.target.id === 'addQuestionBtn') {\n            addNewQuestion();\n        }\n    });\n\n    if (testGeneratorForm) {\n        testGeneratorForm.addEventListener('submit', function(e) {\n            e.preventDefault();\n            generateTestCode();\n        });\n    }\n\n    function generateTestCode() {\n        const questionCards = questionsContainer.querySelectorAll('.question-card');\n        const generatedQuestions = [];\n        let isValid = true;\n\n        if (questionCards.length === 0) {\n            showAlert('Пожалуйста, добавьте хотя бы один вопрос.', 'info');\n            return;\n        }\n\n        questionCards.forEach((card) => {\n            const questionText = card.querySelector('.question-text').value;\n            const answerInputs = card.querySelectorAll('.answer-text');\n            const correctAnswerRadio = card.querySelector('.correct-answer-radio:checked');\n\n            if (!questionText || !correctAnswerRadio) {\n                isValid = false;\n            }\n\n            const answers = [];\n            answerInputs.forEach((input, answerIndex) => {\n                if (!input.value) {\n                    isValid = false;\n                }\n                answers.push({\n                    text: input.value,\n                    correct: answerIndex === parseInt(correctAnswerRadio.value)\n                });\n            });\n\n            generatedQuestions.push({\n                question: questionText,\n                answers: answers\n            });\n        });\n\n        if (!isValid) {\n            showAlert('Пожалуйста, заполните все текстовые поля и выберите правильный ответ для каждого вопроса.', 'info');\n            return;\n        }\n\n        const code = `const questions = [\\n${generatedQuestions.map(q => \n`    {\\n        question: \"${q.question.replace(new RegExp('\"', 'g'), '\\\\\"')}\",\\n        answers: [\\n${q.answers.map(a => \n`            { text: \"${a.text.replace(new RegExp('\"', 'g'), '\\\\\"')}\", correct: ${a.correct} }`).join(',\\n')}\\n        ]\\n    }`\n).join(',\\n')}\\n];`;\n\n        document.getElementById('generatedCode').textContent = code;\n        document.getElementById('resultContainer').style.display = 'block';\n        window.generatedCodeForCopy = code;\n    }\n\n    // Добавляем первый вопрос только один раз, когда вкладка становится видимой\n    const tabObserver = new MutationObserver(mutations => {\n        mutations.forEach(mutation => {\n            if (mutation.attributeName === 'class' && testGeneratorTab.classList.contains('active')) {\n                // Если контейнер пуст, добавляем первый вопрос\n                if (questionsContainer.children.length === 0) {\n                    addNewQuestion();\n                }\n            }\n        });\n    });\n\n    tabObserver.observe(testGeneratorTab, { attributes: true });\n});\n\nfunction copyToClipboard() {\n    if (!window.generatedCodeForCopy) return;\n    navigator.clipboard.writeText(window.generatedCodeForCopy).then(() => {\n        showAlert('Код скопирован в буфер обмена!', 'success');\n    }).catch(err => {\n        showAlert('Не удалось скопировать код', 'error');\n    });\n}\n\nwindow.copyToClipboard = copyToClipboard;","// lessonsTable.js\nlet currentLessonsPage = 1;\nlet totalLessonsPages = 1;\nlet totalLessonsItems = 0;\nlet lessonsPerPage = 5;\n\n// --- NEW: Function to load modules for the filter dropdown ---\nasync function loadModulesForFilter() {\n    try {\n        const response = await fetch('/admin/modules/json');\n        if (!response.ok) {\n            return null;\n        }\n        const data = await response.json();\n        if (data.success && data.data) {\n            const select = document.getElementById('moduleFilterSelect');\n            if (!select) return;\n\n            // Save selected value if it exists\n            const currentFilter = select.value;\n\n            select.innerHTML = '<option value=\"\">Все модули</option>'; // Reset and add default option\n            data.data.forEach(module => {\n                const option = document.createElement('option');\n                option.value = module.moduleId;\n                option.textContent = `${module[\"moduleTitle\"]}`;\n                select.appendChild(option);\n            });\n\n            // Restore selected value\n            if (currentFilter) {\n                select.value = currentFilter;\n            }\n\n        } else {\n            return null;\n        }\n    } catch (error) {\n        showAlert('Не удалось загрузить фильтр модулей.', 'warning');\n    }\n}\n\n// --- MODIFIED: Load lessons with filtering capability ---\nasync function loadLessons(page = 1) {\n    try {\n        showLoading(true);\n\n        const moduleId = document.getElementById('moduleFilterSelect')?.value || '';\n        let url = `/admin/lessons?page=${page}&size=${lessonsPerPage}`;\n        if (moduleId) {\n            url += `&moduleId=${moduleId}`;\n        }\n\n        const response = await fetch(url);\n\n        if (response.ok) {\n            const result = await response.json();\n\n            if (result.success && result.data) {\n                const paginatedData = result.data;\n                currentLessonsPage = paginatedData.currentPage || page;\n                totalLessonsPages = paginatedData.totalPages || 1;\n                totalLessonsItems = paginatedData.totalItems || 0;\n\n                renderLessonsTable(paginatedData.content);\n                renderLessonsPagination(paginatedData.content);\n            } else {\n                 showAlert(result.message || 'Неверный формат данных', 'error');\n            }\n        } else {\n            // Handle cases like 404 when no lessons are found for a filter\n            if (response.status === 404) {\n                renderLessonsTable([]);\n                renderLessonsPagination([]);\n            } else {\n                return null;\n            }\n        }\n    } catch (error) {\n        showAlert(error.message, 'error');\n    } finally {\n        showLoading(false);\n    }\n}\n\n// --- MODIFIED: Render lessons table with filter dropdown ---\nfunction renderLessonsTable(lessons) {\n    const container = document.getElementById('lessonsContainer');\n    if (!container) {\n        return;\n    }\n\n    container.innerHTML = '';\n\n    const tableWrapper = document.createElement('div');\n    tableWrapper.className = 'courses-table-container';\n\n    tableWrapper.innerHTML = `\n        <div class=\"data-table courses-table lessons-table\">\n            <div class=\"table-header d-flex justify-content-between align-items-center flex-wrap\">\n                <h3 class=\"table-title mb-2 mb-md-0\">Список уроков</h3>\n                <div class=\"d-flex align-items-center gap-2 flex-wrap\">\n                    <!-- NEW: Module Filter -->\n                    <div class=\"filter-group\">\n                        <select class=\"form-select form-select-sm\" id=\"moduleFilterSelect\" onchange=\"loadLessons(1)\">\n                            <option value=\"\">Фильтр по модулю...</option>\n                        </select>\n                    </div>\n                    <div class=\"page-size-selector\">\n                        <div class=\"input-group input-group-sm\">\n                            <span class=\"input-group-text\">Отображать</span>\n                            <select class=\"form-select\" id=\"lessonsPageSizeSelect\" onchange=\"changeLessonsPerPage(this.value)\">\n                                <option value=\"5\" ${lessonsPerPage === 5 ? 'selected' : ''}>5</option>\n                                <option value=\"10\" ${lessonsPerPage === 10 ? 'selected' : ''}>10</option>\n                                <option value=\"20\" ${lessonsPerPage === 20 ? 'selected' : ''}>20</option>\n                                <option value=\"50\" ${lessonsPerPage === 50 ? 'selected' : ''}>50</option>\n                            </select>\n                        </div>\n                    </div>\n                    <button class=\"btn btn-primary btn-sm\" onclick=\"openCreateLessonModal()\">\n                        <i class=\"bi bi-plus-circle me-1\"></i>Новый урок\n                    </button>\n                </div>\n            </div>\n\n            <div class=\"table-content\">\n                <div class=\"table-row header-row\">\n                    <div class=\"table-cell\">ID</div>\n                    <div class=\"table-cell\">Название</div>\n                    <div class=\"table-cell\">Модуль</div>\n                    <div class=\"table-cell\">Описание</div>\n                    <div class=\"table-cell\">Видео</div>\n                    <div class=\"table-cell\">Действия</div>\n                </div>\n\n                ${lessons.length > 0 ? lessons.map(lesson => `\n                <div class=\"table-row\">\n                    <div class=\"table-cell text-muted\">#${lesson.id || 'N/A'}</div>\n                    <div class=\"table-cell\">\n                        <div class=\"fw-bold\">${escapeHtml(lesson.title || 'Без названия')}</div>\n                    </div>\n                    <div class=\"table-cell\">\n                        <span class=\"text-muted\">${escapeHtml(lesson[\"moduleName\"] || 'N/A')}</span>\n                    </div>\n                    <div class=\"table-cell\">\n                        <span class=\"lesson-description\">${truncateText(lesson.description || 'Нет описания', 100)}</span>\n                    </div>\n                    <div class=\"table-cell\">\n                        ${lesson.video ? `\n                            <a href=\"/admin/video/${lesson.video}\" class=\"text-primary text-decoration-none\">\n                                <i class=\"bi bi-camera-video me-1\"></i> Смотреть\n                            </a>\n                        ` : '<span class=\"text-muted\">Нет видео</span>'}\n                    </div>\n                    <div class=\"table-cell action-buttons\">\n                        <button class=\"btn btn-info btn-icon btn-sm edit-lesson-btn\" title=\"Редактировать\" data-lesson-id=\"${lesson.id}\">\n                            <i class=\"bi bi-pencil\"></i>\n                        </button>\n                        <button class=\"btn btn-danger btn-icon btn-sm\" title=\"Удалить\"\n                                onclick=\"deleteLesson(${lesson.id}, '${escapeHtml(lesson.title)}')\">\n                            <i class=\"bi bi-trash\"></i>\n                        </button>\n                    </div>\n                </div>\n                `).join('') : `\n                <div class=\"table-row\">\n                    <div class=\"table-cell\" style=\"grid-column: 1 / -1; text-align: center; padding: 2rem; color: #94a3b8;\">\n                        <i class=\"bi bi-book-open me-2\"></i>\n                        Уроки не найдены. Измените фильтр или добавьте новый урок.\n                    </div>\n                </div>\n                `}\n            </div>\n        </div>\n    `;\n    container.appendChild(tableWrapper);\n\n    // --- NEW: Populate the filter after rendering the table structure ---\n    void loadModulesForFilter();\n}\n\n// Рендер пагинации\nfunction renderLessonsPagination(lessons) {\n    const container = document.getElementById('lessonsPagination');\n    if (!container) {\n        return;\n    }\n\n    if (totalLessonsPages <= 1) {\n        container.innerHTML = '';\n        return;\n    }\n\n    let paginationHTML = `\n        <nav aria-label=\"Page navigation\">\n            <ul class=\"pagination justify-content-center\">\n                <li class=\"page-item ${currentLessonsPage === 1 ? 'disabled' : ''}\">\n                    <a class=\"page-link\" href=\"#\" onclick=\"changeLessonsPage(${currentLessonsPage - 1}); return false;\">&laquo;</a>\n                </li>\n    `;\n\n    const maxVisiblePages = 5;\n    let startPage = Math.max(1, currentLessonsPage - Math.floor(maxVisiblePages / 2));\n    let endPage = Math.min(totalLessonsPages, startPage + maxVisiblePages - 1);\n\n    if (endPage - startPage + 1 < maxVisiblePages) {\n        startPage = Math.max(1, endPage - maxVisiblePages + 1);\n    }\n\n    if (startPage > 1) {\n        paginationHTML += `<li class=\"page-item\"><a class=\"page-link\" href=\"#\" onclick=\"changeLessonsPage(1); return false;\">1</a></li>`;\n        if (startPage > 2) {\n            paginationHTML += `<li class=\"page-item disabled\"><span class=\"page-link\">...</span></li>`;\n        }\n    }\n\n    for (let i = startPage; i <= endPage; i++) {\n        paginationHTML += `<li class=\"page-item ${i === currentLessonsPage ? 'active' : ''}\"><a class=\"page-link\" href=\"#\" onclick=\"changeLessonsPage(${i}); return false;\">${i}</a></li>`;\n    }\n\n    if (endPage < totalLessonsPages) {\n        if (endPage < totalLessonsPages - 1) {\n            paginationHTML += `<li class=\"page-item disabled\"><span class=\"page-link\">...</span></li>`;\n        }\n        paginationHTML += `<li class=\"page-item\"><a class=\"page-link\" href=\"#\" onclick=\"changeLessonsPage(${totalLessonsPages}); return false;\">${totalLessonsPages}</a></li>`;\n    }\n\n    paginationHTML += `\n                <li class=\"page-item ${currentLessonsPage === totalLessonsPages ? 'disabled' : ''}\">\n                    <a class=\"page-link\" href=\"#\" onclick=\"changeLessonsPage(${currentLessonsPage + 1}); return false;\">&raquo;</a>\n                </li>\n            </ul>\n        </nav>\n        \n        <div class=\"pagination-info text-center mt-2\">\n            <small class=\"text-muted\">\n                Страница ${currentLessonsPage} из ${totalLessonsPages} • Показано ${lessons.length} из ${totalLessonsItems} уроков\n            </small>\n        </div>\n    `;\n\n    container.innerHTML = paginationHTML;\n}\n\n// Смена страницы\nfunction changeLessonsPage(page) {\n    if (page < 1 || page > totalLessonsPages || page === currentLessonsPage) return;\n    void loadLessons(page);\n}\n\n// Изменение количества уроков на странице\nfunction changeLessonsPerPage(perPage) {\n    lessonsPerPage = parseInt(perPage) || 10;\n     void loadLessons(1);\n}\n\n// Вспомогательные функции\nfunction showLoading(show) {\n    const container = document.getElementById('lessonsContainer');\n    if (!container) return;\n\n    if (show) {\n        container.innerHTML = `\n            <div class=\"d-flex justify-content-center align-items-center\" style=\"height: 200px;\">\n                <div class=\"spinner-border text-primary\" role=\"status\">\n                    <span class=\"visually-hidden\">Загрузка...</span>\n                </div>\n            </div>\n        `;\n    }\n}\n\nfunction truncateText(text, maxLength) {\n    if (!text || text.length <= maxLength) return escapeHtml(text || '');\n    return escapeHtml(text.substring(0, maxLength)) + '...';\n}\n\nfunction escapeHtml(text) {\n    if (typeof text !== 'string') return '';\n    const div = document.createElement('div');\n    div.textContent = text;\n    return div.innerHTML;\n}\n\nasync function deleteLesson(lessonId, lessonTitle) {\n    if (!confirm(`Вы уверены, что хотите удалить урок \"${lessonTitle}\"?`)) {\n        return;\n    }\n\n    try {\n        const headers = {\n            'Content-Type': 'application/json'\n        };\n\n        const response = await fetch(`/admin/lessons/${lessonId}/delete`, {\n            method: 'DELETE',\n            headers: headers\n        });\n\n        const result = await response.json().catch(() => ({})); // Handle empty response\n\n        if (response.ok && result.success) {\n            showAlert(`Урок \"${lessonTitle}\" успешно удален.`, 'success');\n            void loadLessons(currentLessonsPage || 1);\n        } else {\n            const errorMessage = result.message || `Ошибка удаления: ${response.status}`;\n            showAlert(errorMessage, 'error');\n        }\n\n    } catch (error) {\n        showAlert(error.message, 'error');\n    }\n}\n\n// Инициализация\ndocument.addEventListener('DOMContentLoaded', function() {\n    const lessonsTabTrigger = document.querySelector('a[data-tab=\"lessons-edit-tab\"]');\n    if (lessonsTabTrigger) {\n        lessonsTabTrigger.addEventListener('click', function() {\n            // Ensure we load lessons only when the tab is activated\n            setTimeout(() => loadLessons(1), 10); \n        });\n\n        // If the tab is already active on page load, load lessons\n        if (document.getElementById('lessons-edit-tab')?.classList.contains('active')) {\n            void loadLessons(1);\n        }\n    }\n});\n\nwindow.loadLessons = loadLessons;\nwindow.changeLessonsPerPage = changeLessonsPerPage;\nwindow.changeLessonsPage = changeLessonsPage;\nwindow.deleteLesson = deleteLesson;\n","\ndocument.addEventListener('DOMContentLoaded', function () {\n    // Используем делегирование событий для кнопок редактирования\n    document.getElementById('modulesContainer').addEventListener('click', function (event) {\n        const editButton = event.target.closest('.edit-module-btn');\n        if (editButton) {\n            const moduleId = editButton.dataset.moduleId;\n            void openEditModuleModal(moduleId);\n        }\n    });\n\n    // Обработка отправки формы\n    const editModuleForm = document.getElementById('editModuleForm');\n    if (editModuleForm) {\n        editModuleForm.addEventListener('submit', async function (event) {\n            event.preventDefault();\n            await submitEditModuleForm();\n        });\n    }\n});\n\nasync function openEditModuleModal(moduleId) {\n    try {\n        // 1. Получаем данные модуля\n        const response = await fetch(`/admin/module/${moduleId}`);\n        const result = await response.json();\n\n        if (response.ok && result.success && result.data) {\n            const module = result.data;\n\n            // 2. Заполняем поля формы\n            document.getElementById('editModuleId').value = module.moduleId;\n            document.getElementById('editModuleTitle').value = module[\"moduleTitle\"];\n            document.getElementById('editModuleSlug').value = module[\"moduleSlug\"];\n\n            // 3. Загружаем и устанавливаем курс\n            const courseSelect = document.getElementById('editModuleCourseId');\n            await loadCoursesIntoSelect(courseSelect, module[\"courseName\"]);\n\n            // 4. Показываем модальное окно\n            const modal = new bootstrap.Modal(document.getElementById('editModuleModal'));\n            modal.show();\n        } else {\n            showAlert(result.message || 'Не удалось получить данные модуля.', 'error');\n        }\n\n    } catch (error) {\n        console.error('Ошибка при открытии модального окна:', error);\n        showAlert('Критическая ошибка при загрузке данных модуля.', 'error');\n    }\n}\n\nasync function submitEditModuleForm() {\n    const form = document.getElementById('editModuleForm');\n    const moduleId = document.getElementById('editModuleId').value;\n    const modal = bootstrap.Modal.getInstance(document.getElementById('editModuleModal'));\n\n    const formData = {\n        moduleId: moduleId,\n        name: document.getElementById('editModuleTitle').value,\n        slug: document.getElementById('editModuleSlug').value,\n        courseId: document.getElementById('editModuleCourseId').value\n    };\n\n    try {\n        const response = await fetch(`/admin/modules/update`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRF-TOKEN': getCsrfToken()\n            },\n            body: JSON.stringify(formData)\n        });\n\n        const result = await response.json();\n\n        if (response.ok && result.status === 'success') {\n            showAlert(result.message || 'Модуль успешно обновлен!', 'success');\n            modal.hide();\n            // Обновляем таблицу модулей\n            if (typeof loadModules === 'function') {\n                void loadModules(window.currentModulesPage || 1);\n            }\n        } else {\n            // Обработка ошибок валидации или других сообщений об ошибках\n            if (result.errors) {\n                const errorMessages = Object.values(result.errors).join('\\n');\n                showAlert('Ошибка валидации:\\n' + errorMessages, 'error');\n            } else {\n                showAlert(result.message || 'Не удалось обновить модуль.', 'error');\n                console.error(new Error(result.message || 'Не удалось обновить модуль.'));\n            }\n        }\n    } catch (error) {\n        console.error('Ошибка при обновлении модуля:', error);\n        showAlert('Ошибка: ' + error.message, 'error');\n    }\n}\n\n// Загрузка списка курсов в select\nasync function loadCoursesIntoSelect(selectElement, selectedCourseTitle) {\n    try {\n        const response = await fetch('/admin/courses/all');\n        if (!response.ok) {\n            console.error(new Error('Не удалось загрузить список курсов.'));\n        }\n        const data = await response.json();\n        const courses = data.data; // Corrected: data is in data.data\n\n        selectElement.innerHTML = '<option value=\"\">Выберите курс</option>';\n        courses.forEach(course => {\n            const option = document.createElement('option');\n            option.value = course.id;\n            option.textContent = course.title;\n            if (course.title === selectedCourseTitle) {\n                option.selected = true;\n            }\n            selectElement.appendChild(option);\n        });\n    } catch (error) {\n        console.error(error);\n        selectElement.innerHTML = '<option value=\"\">Ошибка загрузки курсов</option>';\n    }\n}\n\nfunction getCsrfToken() {\n    return document.querySelector('meta[name=\"_csrf\"]')?.content || document.querySelector('input[name=\"_csrf\"]')?.value;\n}\n\nwindow.loadCoursesIntoSelect = loadCoursesIntoSelect;\nwindow.submitEditModuleForm = submitEditModuleForm;\nwindow.openEditModuleModal = openEditModuleModal;\n\n","document.addEventListener('DOMContentLoaded', function() {\n    const form = document.getElementById('createModuleForm');\n    const courseSelect = document.getElementById('moduleCourseId');\n    const titleInput = document.getElementById('moduleTitle');\n    const slugInput = document.getElementById('moduleSlug');\n\n\n    const courseSelectAdminCreateModule = document.getElementById('moduleCourseId');\n    void loadCoursesIntoSelect(courseSelectAdminCreateModule, null)\n\n    // Load courses when the tab is shown\n    const createModuleTab = document.querySelector('a[data-tab=\"create-module-tab\"]');\n    if (createModuleTab) {\n        createModuleTab.addEventListener('click', loadCourses);\n    }\n    \n    // Also load courses if the tab is already active on page load\n    if (document.getElementById('create-module-tab')?.classList.contains('active')) {\n        void loadCourses();\n    }\n\n\n    if (form) {\n        form.addEventListener('submit', async function(event) {\n            event.preventDefault();\n\n            if (!validateForm()) {\n                return;\n            }\n\n            try {\n                const formData = {\n                    courseId: courseSelect.value,\n                    slug: slugInput.value,\n                    title: titleInput.value,\n                };\n\n                const csrfToken = document.querySelector('meta[name=\"_csrf\"]')?.content;\n                const csrfHeader = document.querySelector('meta[name=\"_csrf_header\"]')?.content;\n\n                const headers = {\n                    'Content-Type': 'application/json'\n                };\n                if (csrfToken && csrfHeader) {\n                    headers[csrfHeader] = csrfToken;\n                }\n\n\n                const response = await fetch('/admin/modules/create', {\n                    method: 'POST',\n                    headers: headers,\n                    body: JSON.stringify(formData)\n                });\n\n                const result = await response.json();\n\n                if (response.ok && result.status === 'success') {\n                    showAlert(result.message || 'Модуль успешно создан!', 'success');\n                    form.reset();\n                    // Optionally, switch back to the modules list tab\n                    const modulesTab = document.querySelector('a[data-tab=\"modules-edit-tab\"]');\n                    if (modulesTab) {\n                        modulesTab.click();\n                    }\n                } else {\n                    if (result.errors) {\n                        const errorMessages = Object.values(result.errors).join('\\n');\n                        showAlert('Ошибка валидации:\\n' + errorMessages, 'error');\n                    } else {\n                        showAlert(result.message || \"Ошибка при создании модуля\", 'error');\n                    }\n                    console.error('Server error:', result.message || result.errors);\n                }\n\n            } catch (error) {\n                console.error('Ошибка отправки:', error);\n                showAlert('Произошла критическая ошибка при отправке данных', 'error');\n            }\n        });\n    }\n\n    function validateForm() {\n        if (!courseSelect.value) {\n            showAlert('Пожалуйста, выберите курс', 'error');\n            return false;\n        }\n        if (!titleInput.value.trim()) {\n            showAlert('Пожалуйста, введите название модуля', 'error');\n            return false;\n        }\n        if (!slugInput.value.trim()) {\n            showAlert('Пожалуйста, укажите URI модуля', 'error');\n            return false;\n        }\n\n        const slugRegex = /^[a-z0-9-]+$/;\n        if (!slugRegex.test(slugInput.value)) {\n            showAlert('URI может содержать только латинские буквы в нижнем регистре, цифры и дефисы', 'error');\n            return false;\n        }\n        return true;\n    }\n\n    let isSlugManuallyEdited = false;\n\n    if (titleInput && slugInput) {\n        // Generate slug as user types in the title field\n        titleInput.addEventListener('input', () => {\n            if (!isSlugManuallyEdited) {\n                generateSlugFromTitle();\n            }\n        });\n\n        // Detect when user edits the slug field manually to disable auto-generation\n        slugInput.addEventListener('input', () => {\n            isSlugManuallyEdited = true;\n        });\n    }\n\n    function generateSlugFromTitle() {\n        const title = titleInput.value.trim();\n        if (title) {\n            const translitMap = {\n                'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd', 'е': 'e', 'ё': 'yo', 'ж': 'zh',\n                'з': 'z', 'и': 'i', 'й': 'y', 'к': 'k', 'л': 'l', 'м': 'm', 'н': 'n', 'о': 'o',\n                'п': 'p', 'р': 'r', 'с': 's', 'т': 't', 'у': 'u', 'ф': 'f', 'х': 'h', 'ц': 'ts',\n                'ч': 'ch', 'ш': 'sh', 'щ': 'shch', 'ъ': '', 'ы': 'y', 'ь': '', 'э': 'e', 'ю': 'yu', 'я': 'ya'\n            };\n\n            let slug = title.toLowerCase();\n            let result = '';\n            for (let i = 0; i < slug.length; i++) {\n                result += translitMap[slug[i]] || slug[i];\n            }\n\n            slug = result\n                .replace(/['\"’]/g, '')      // remove quotes\n                .replace(/\\s+/g, '-')       // collapse whitespace and replace by -\n                .replace(/[^a-z0-9-]/g, '') // remove invalid chars\n                .replace(/-+/g, '-')        // collapse dashes\n                .replace(/^-|-$/g, '');     // trim - from start or end\n\n            slugInput.value = slug;\n        }\n    }\n});","function deleteModule(id) {\n    // Показываем подтверждающее окно\n    const isConfirmed = confirm('Вы уверены, что хотите удалить этот модуль, и все его уроки? Это действие нельзя отменить.');\n\n    if (!isConfirmed) {\n        return; // Если пользователь отменил, прерываем выполнение\n    }\n\n    // Отправляем запрос на сервер\n    fetch(`/admin/module/${id}/delete`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'X-CSRF-TOKEN': document.querySelector('meta[name=\"_csrf\"]')?.content || '' // Для Spring Security CSRF\n        }\n    })\n        .then(response => {\n            // Всегда пытаемся парсить JSON, даже для \"плохих\" ответов\n            return response.json().then(data => {\n                if (!response.ok) {\n                    // Если ответ не \"ok\", создаем ошибку с сообщением от сервера\n                    throw new Error(data.message || 'Ошибка при удалении модуля');\n                }\n                return data; // Возвращаем данные, если все в порядке\n            });\n        })\n        .then(data => {\n            // Успешное удаление\n            showAlert(data.message || 'Модуль успешно удален', 'success');\n\n            // Обновляем таблицу модулей без перезагрузки страницы\n            if (typeof loadModules === 'function') {\n                void loadModules(window.currentModulesPage || 1);\n            }\n        })\n        .catch(error => {\n            // Обработка ошибок\n            showAlert(`Ошибка: ${error.message}`, 'error');\n            console.error('Ошибка при удалении модуля:', error);\n        });\n}\n\nwindow.deleteModule = deleteModule;\n","function adminUpdateModuleStatus(moduleID, status) {\n    const isConfirmed = confirm('Вы уверены, что хотите обновить статус?');\n\n    if (!isConfirmed) {\n        return; // Если пользователь отменил, прерываем выполнение\n    }\n\n    if(status === 'ACTIVE') {\n        status = 'INACTIVE'\n    }else{\n        status = 'ACTIVE'\n    }\n\n    // Отправляем запрос на сервер\n    fetch(`/admin/modules/updateStatus/${moduleID}/${status}`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'X-CSRF-TOKEN': document.querySelector('meta[name=\"_csrf\"]')?.content || '' // Для Spring Security CSRF\n        }\n    })\n        .then(response => {\n            return response.json().then(data => {\n                if (!response.ok) {\n                    throw new Error(data.message || 'Ошибка при обновлении статуса');\n                }\n                return data;\n            });\n        })\n        .then(data => {\n            // Успешное обновление\n            showAlert(data.message, 'success');\n\n            // Обновляем таблицу модулей без перезагрузки страницы\n            if (typeof loadModules === 'function') {\n                void loadModules(window.currentModulesPage || 1);\n            }\n        })\n        .catch(error => {\n            // Обработка ошибок\n            showAlert(`Ошибка: ${error.message}`, 'error');\n            console.error('Ошибка при обновлении статуса:', error);\n        });\n}\n\nwindow.adminUpdateModuleStatus = adminUpdateModuleStatus;\n","async function loadModuleLessons(moduleId) {\n    try {\n        const response = await fetch(`/admin/modules/${moduleId}/lessons`);\n\n        // Case 1: Success (200 OK)\n        if (response.ok) {\n            const result = await response.json();\n            if (result.success) {\n                showLessonsModal(result.data);\n            } else {\n                showAlert(result.message || 'Получен неожиданный ответ от сервера.', 'warning');\n            }\n            return;\n        }\n\n        // Case 2: Not Found (404)\n        if (response.status === 404) {\n            showAlert('В этом модуле пока нет уроков.', 'info');\n            // Show an empty modal for better UX\n            showLessonsModal([]);\n            return;\n        }\n\n        // Case 3: Server Error (500) or other client errors (4xx)\n        let errorMessage = `HTTP ошибка: ${response.status} ${response.statusText}`;\n        try {\n            // Try to get a more specific error message from the response body\n            const errorData = await response.json();\n            if (errorData && errorData.error) {\n                errorMessage = `Ошибка на сервере: ${errorData.error}`;\n            }\n        } catch (e) {\n            // Body is not JSON or is empty, stick with the generic HTTP error message\n            console.error(\"Could not parse error JSON.\", e);\n        }\n\n        showAlert(errorMessage, 'error');\n        console.error('Failed to load lessons:', errorMessage);\n\n    } catch (error) {\n        // Case 4: Network error or other fetch-related failures\n        console.error('Network or fetch error:', error);\n        showAlert('Сетевая ошибка. Не удалось подключиться к серверу.', 'error');\n    }\n}\n\nfunction showLessonsModal(lessons) {\n    // Create the modal if it doesn't exist yet\n    if (!document.getElementById('lessonsModal')) {\n        const modalHtml = `\n            <div class=\"modal fade\" id=\"lessonsModal\" tabindex=\"-1\" aria-labelledby=\"lessonsModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog modal-lg\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title\" id=\"lessonsModalLabel\">Уроки модуля</h5>\n                            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                        </div>\n                        <div class=\"modal-body\" id=\"lessonsModalBody\">\n                            <!-- Lesson list will be inserted here -->\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Закрыть</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `;\n        document.body.insertAdjacentHTML('beforeend', modalHtml);\n    }\n\n    const modalBody = document.getElementById('lessonsModalBody');\n    const modalTitle = document.getElementById('lessonsModalLabel');\n\n    if (lessons.length === 0) {\n        modalTitle.textContent = 'Уроки модуля';\n        modalBody.innerHTML = `\n            <div class=\"text-center py-4\">\n                <i class=\"bi bi-book-half fa-3x text-muted mb-3\"></i>\n                <h5 class=\"text-muted\">В этом модуле нет уроков</h5>\n                <p class=\"text-muted\">Вы можете создать первый урок в разделе \"Уроки\".</p>\n            </div>\n        `;\n    } else {\n        const moduleName = lessons[0]?.moduleName || 'Модуль';\n        modalTitle.textContent = `Уроки модуля: ${moduleName}`;\n\n        modalBody.innerHTML = `\n            <div class=\"list-group\">\n                ${lessons.map(lesson => `\n                    <div class=\"list-group-item list-group-item-action\">\n                        <div class=\"d-flex justify-content-between align-items-center\">\n                            <div class=\"flex-grow-1\">\n                                <h6 class=\"mb-1\">${lesson.title || 'Без названия'}</h6>\n                                <small class=\"text-muted\">ID: ${lesson.id}</small>\n                            </div>\n                            <div class=\"btn-group ms-3\">\n                                <button class=\"btn btn-outline-info btn-sm\" onclick=\"viewLesson(${lesson.id}, '${lesson.courseSlug}', '${lesson.moduleSlug}')\">\n                                    <i class=\"bi bi-eye\"></i> Просмотреть\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                `).join('')}\n            </div>\n            <div class=\"mt-3\">\n                <small class=\"text-muted\">Всего уроков: ${lessons.length}</small>\n            </div>\n        `;\n    }\n\n    const modal = new bootstrap.Modal(document.getElementById('lessonsModal'));\n    modal.show();\n}\n\nfunction viewLesson(lessonId, courseSlug, moduleSlug) {\n    if (!courseSlug || !moduleSlug) {\n        showAlert('Недостаточно данных для перехода к уроку (отсутствует slug курса или модуля).', 'error');\n        return;\n    }\n    const url = `/course/${courseSlug}/module/${moduleSlug}/lesson/${lessonId}`;\n    console.log(`Redirecting to: ${url}`);\n    window.location.href = url;\n}\n\nwindow.loadModuleLessons = loadModuleLessons;\nwindow.viewLesson = viewLesson;\n","let currentModulesPage = 1;\nlet totalModulesPages = 1;\nlet totalModulesItems = 0;\nlet modulesPerPage = 5;\n\n// --- NEW: Initialize the entire view (controls and data) ---\nfunction initModulesView() {\n    const container = document.getElementById('modulesContainer');\n    if (!container) {\n        console.error('Module container not found!');\n        return;\n    }\n\n    // 1. Render the static part of the table (header, filters)\n    renderModuleControls(container);\n\n    // 2. Populate the filter with data\n    void loadCoursesForFilter();\n\n    // 3. Load the initial set of data\n    void loadModules(1);\n}\n\n// --- NEW: Renders the static controls (header, filters) only once ---\nfunction renderModuleControls(container) {\n    container.innerHTML = `\n        <div class=\"data-table courses-table modules-table\">\n            <div class=\"table-header d-flex justify-content-between align-items-center flex-wrap\">\n                 <h3 class=\"table-title mb-2 mb-md-0\">Список модулей</h3>\n                 <div class=\"d-flex align-items-center gap-2 flex-wrap\">\n                    <div class=\"filter-group\">\n                        <select class=\"form-select form-select-sm\" id=\"courseFilterSelect\" onchange=\"loadModules(1)\">\n                            <option value=\"\">Фильтр по курсу...</option>\n                        </select>\n                    </div>\n                    <div class=\"page-size-selector\">\n                        <div class=\"input-group input-group-sm\">\n                            <span class=\"input-group-text\">Отображать</span>\n                            <select class=\"form-select\" id=\"modulesPageSizeSelect\" onchange=\"changeModulesPerPage(this.value)\">\n                                <option value=\"5\">5</option>\n                                <option value=\"10\">10</option>\n                                <option value=\"20\">20</option>\n                                <option value=\"50\">50</option>\n                            </select>\n                        </div>\n                    </div>\n                     <button class=\"btn btn-primary btn-sm\" onclick=\"openCreateModuleModal()\">\n                        <i class=\"bi bi-plus-circle me-1\"></i>Новый модуль\n                    </button>\n                </div>\n            </div>\n            <!-- This container will be updated with new rows -->\n            <div class=\"table-content\" id=\"modules-table-content\">\n                <!-- Rows will be injected here -->\n            </div>\n        </div>\n    `;\n    // Set the initial value for the page size selector\n    document.getElementById('modulesPageSizeSelect').value = modulesPerPage;\n}\n\n// --- NEW: Function to load courses for the filter dropdown (runs once) ---\nasync function loadCoursesForFilter() {\n    const select = document.getElementById('courseFilterSelect');\n    if (!select) return;\n\n    try {\n        const response = await fetch('/admin/courses/all');\n        if (!response.ok) {\n            console.error(new Error('Failed to load courses'));\n            return null;\n        }\n        const json = await response.json();\n        \n        if (!json.success || !json.data) {\n            console.error(new Error('Invalid data format for courses'));\n            return null;\n        }\n\n        json.data.forEach(course => {\n            const option = document.createElement('option');\n            option.value = course.id;\n            option.textContent = course.title;\n            select.appendChild(option);\n        });\n    } catch (error) {\n        console.error('Error loading courses for filter:', error);\n        showAlert('Не удалось загрузить фильтр курсов.', 'warning');\n    }\n}\n\n// --- MODIFIED: Fetches data and calls a specific function to render only the rows ---\nasync function loadModules(page = 1) {\n    const contentContainer = document.getElementById('modules-table-content');\n    if (!contentContainer) {\n        initModulesView(); // If the container doesn't exist, initialize the whole view\n        return;\n    }\n\n    showLoadingModules(true);\n\n    try {\n        const courseId = document.getElementById('courseFilterSelect')?.value || '';\n        let url = `/admin/modules?page=${page}&size=${modulesPerPage}`;\n        if (courseId) {\n            url += `&courseId=${courseId}`;\n        }\n\n        const response = await fetch(url);\n        const data = await response.json();\n\n        if (response.ok && data.success && data.data && typeof data.data.content !== 'undefined') {\n            const paginatedModules = data.data;\n\n            currentModulesPage = paginatedModules[\"currentPage\"] || page;\n            totalModulesPages = paginatedModules[\"totalPages\"] || 1;\n            totalModulesItems = paginatedModules[\"totalItems\"] || 0;\n\n            renderModuleRows(paginatedModules.content);\n            renderModulesPagination();\n        } else {\n            showErrorModules(data.message || \"Получены неверные данные от сервера.\");\n        }\n\n    } catch (error) {\n        console.error('Ошибка загрузки модулей:', error);\n        showErrorModules(error.message);\n    } finally {\n        showLoadingModules(false);\n    }\n}\n\n// --- NEW: Renders only the module rows into the content container ---\nfunction renderModuleRows(modules) {\n    const container = document.getElementById('modules-table-content');\n    if (!container) return;\n\n    // Clear only the rows\n    container.innerHTML = '';\n\n    const headerRow = `\n        <div class=\"table-row header-row\">\n            <div class=\"table-cell\">ID</div>\n            <div class=\"table-cell\">Название</div>\n            <div class=\"table-cell\">Курс</div>\n            <div class=\"table-cell\">Статус</div>\n            <div class=\"table-cell\">Действия</div>\n        </div>\n    `;\n    container.insertAdjacentHTML('beforeend', headerRow);\n\n    if (modules.length === 0) {\n        container.insertAdjacentHTML('beforeend', `\n            <div class=\"table-row\">\n                <div class=\"table-cell\" style=\"grid-column: 1 / -1; text-align: center; padding: 2rem; color: #94a3b8;\">\n                    <i class=\"bi bi-collection me-2\"></i>\n                    Модули не найдены. Измените фильтр или добавьте новый модуль.\n                </div>\n            </div>\n        `);\n        return;\n    }\n\n    modules.forEach(module => {\n        const rowHTML = `\n            <div class=\"table-row\">\n                <div class=\"table-cell text-muted\">#${module.moduleId || 'N/A'}</div>\n                <div class=\"table-cell\">\n                    <div class=\"fw-bold\">${escapeHtml(module[\"moduleTitle\"] || 'Без названия')}</div>\n                </div>\n                <div class=\"table-cell\">\n                    <span class=\"text-muted\">${escapeHtml(module[\"courseName\"] || 'N/A')}</span>\n                </div>\n                <div class=\"table-cell\">\n                    <span class=\"badge ${module[\"moduleStatus\"] === 'ACTIVE' ? 'bg-success' : 'bg-secondary'}\" style=\"cursor: pointer\" onclick=\"adminUpdateModuleStatus(${module.moduleId}, '${module[\"moduleStatus\"]}')\">\n                        ${escapeHtml(adaptiveModuleStatus(module[\"moduleStatus\"]))}\n                    </span>\n                </div>\n                <div class=\"table-cell action-buttons\">\n                    <button class=\"btn btn-primary btn-icon btn-sm edit-module-btn\" title=\"Редактировать\" data-module-id=\"${module.moduleId}\">\n                        <i class=\"bi bi-pencil\"></i>\n                    </button>\n                    <button class=\"btn btn-danger btn-icon btn-sm\" title=\"Удалить\" onclick=\"deleteModule(${module.moduleId}, '${escapeHtml(module[\"moduleTitle\"])}')\">\n                        <i class=\"bi bi-trash\"></i>\n                    </button>\n                    <button class=\"btn btn-info btn-icon btn-sm\" title=\"Уроки модуля\" onclick=\"loadModuleLessons(${module.moduleId})\">\n                        <i class=\"bi bi-card-checklist\"></i>\n                    </button>\n                </div>\n            </div>\n        `;\n        container.insertAdjacentHTML('beforeend', rowHTML);\n    });\n}\n\n// --- UNCHANGED (mostly) ---\nfunction renderModulesPagination() {\n    let container = document.getElementById('modulesPagination');\n    if (!container) {\n        // If the main container exists but pagination doesn't, create it.\n        const mainContainer = document.getElementById('modulesContainer');\n        if(mainContainer) {\n            const paginationDiv = document.createElement('div');\n            paginationDiv.className = 'pagination-container mt-3';\n            paginationDiv.id = 'modulesPagination';\n            mainContainer.appendChild(paginationDiv);\n            container = paginationDiv;\n        } else {\n            return;\n        }\n    }\n\n    if (totalModulesPages <= 1) {\n        container.innerHTML = '';\n        return;\n    }\n\n    let paginationHTML = `\n        <nav aria-label=\"Page navigation\">\n            <ul class=\"pagination justify-content-center\">\n                <li class=\"page-item ${currentModulesPage === 1 ? 'disabled' : ''}\">\n                    <a class=\"page-link\" href=\"#\" onclick=\"changeModulesPage(${currentModulesPage - 1}); return false;\">&laquo;</a>\n                </li>\n    `;\n\n    const maxVisiblePages = 5;\n    let startPage = Math.max(1, currentModulesPage - Math.floor(maxVisiblePages / 2));\n    let endPage = Math.min(totalModulesPages, startPage + maxVisiblePages - 1);\n\n    if (endPage - startPage + 1 < maxVisiblePages) {\n        startPage = Math.max(1, endPage - maxVisiblePages + 1);\n    }\n\n    if (startPage > 1) {\n        paginationHTML += `<li class=\"page-item\"><a class=\"page-link\" href=\"#\" onclick=\"changeModulesPage(1); return false;\">1</a></li>`;\n        if (startPage > 2) paginationHTML += `<li class=\"page-item disabled\"><span class=\"page-link\">...</span></li>`;\n    }\n\n    for (let i = startPage; i <= endPage; i++) {\n        paginationHTML += `<li class=\"page-item ${i === currentModulesPage ? 'active' : ''}\"><a class=\"page-link\" href=\"#\" onclick=\"changeModulesPage(${i}); return false;\">${i}</a></li>`;\n    }\n\n    if (endPage < totalModulesPages) {\n        if (endPage < totalModulesPages - 1) paginationHTML += `<li class=\"page-item disabled\"><span class=\"page-link\">...</span></li>`;\n        paginationHTML += `<li class=\"page-item\"><a class=\"page-link\" href=\"#\" onclick=\"changeModulesPage(${totalModulesPages}); return false;\">${totalModulesPages}</a></li>`;\n    }\n\n    paginationHTML += `\n                <li class=\"page-item ${currentModulesPage === totalModulesPages ? 'disabled' : ''}\">\n                    <a class=\"page-link\" href=\"#\" onclick=\"changeModulesPage(${currentModulesPage + 1}); return false;\">&raquo;</a>\n                </li>\n            </ul>\n        </nav>\n        <div class=\"pagination-info text-center mt-2\">\n            <small class=\"text-muted\">\n                Страница ${currentModulesPage} из ${totalModulesPages} • Всего модулей: ${totalModulesItems}\n            </small>\n        </div>\n    `;\n    container.innerHTML = paginationHTML;\n}\n\nfunction changeModulesPage(page) {\n    if (page < 1 || page > totalModulesPages || page === currentModulesPage) return;\n     void loadModules(page);\n}\n\nfunction changeModulesPerPage(perPage) {\n    modulesPerPage = parseInt(perPage) || 10;\n    void loadModules(1);\n}\n\nfunction showLoadingModules(isLoading) {\n    const container = document.getElementById('modules-table-content');\n    if (!container) return;\n    if (isLoading) {\n        container.innerHTML = `\n            <div class=\"d-flex justify-content-center align-items-center\" style=\"height: 200px;\">\n                <div class=\"spinner-border text-primary\" role=\"status\">\n                    <span class=\"visually-hidden\">Загрузка...</span>\n                </div>\n            </div>\n        `;\n    }\n}\n\nfunction showErrorModules(message) {\n    const container = document.getElementById('modulesContainer');\n    if (!container) return;\n    container.innerHTML = `\n        <div class=\"text-center py-4 text-danger\">\n            <i class=\"bi bi-exclamation-triangle-fill fa-2x mb-3\"></i>\n            <h5>Ошибка загрузки</h5>\n            <p>${escapeHtml(message)}</p>\n            <button class=\"btn btn-primary btn-sm\" onclick=\"initModulesView()\">\n                <i class=\"bi bi-arrow-clockwise me-1\"></i> Попробовать снова\n            </button>\n        </div>\n    `;\n}\n\nfunction adaptiveModuleStatus(status) {\n    return status === 'ACTIVE' ? 'Активный' : 'Неактивный'\n}\n\nfunction escapeHtml(text) {\n    if (typeof text !== 'string') return '';\n    const div = document.createElement('div');\n    div.textContent = text;\n    return div.innerHTML;\n}\n\nfunction openCreateModuleModal() {\n    const tabLink = document.querySelector('a[data-tab=\"create-module-tab\"]');\n    if (tabLink) tabLink.click();\n}\n\n// --- MODIFIED: Initialization logic ---\ndocument.addEventListener('DOMContentLoaded', function() {\n    const modulesTabTrigger = document.querySelector('a[data-tab=\"modules-edit-tab\"]');\n    if (modulesTabTrigger) {\n        let isInitialized = false;\n        const observer = new MutationObserver(() => {\n            if (document.getElementById('modules-edit-tab').classList.contains('active') && !isInitialized) {\n                initModulesView();\n                isInitialized = true;\n            }\n        });\n\n        modulesTabTrigger.addEventListener('click', () => {\n            if (!isInitialized) {\n                initModulesView();\n                isInitialized = true;\n            }\n        });\n\n        if (document.getElementById('modules-edit-tab').classList.contains('active')) {\n            initModulesView();\n            isInitialized = true;\n        }\n    }\n});\n\nwindow.changeModulesPerPage = changeModulesPerPage;\nwindow.openCreateModuleModal = openCreateModuleModal;\nwindow.changeModulesPage = changeModulesPage;\nwindow.initModulesView = initModulesView;\nwindow.loadModules = loadModules;\n","// This file is deprecated. The deleteOffer function is now in getOffers.js","// State variables for pagination and filtering\nlet currentOfferPage = 1;\nlet totalOfferPages = 1;\nlet totalOfferItems = 0;\nlet sortStatus = \"all\";\nlet offersPerPage = 10; // Default value\n\n/**\n * Fetches and renders offers for a given page and filters.\n * @param {number} page - The page number to load.\n */\nasync function loadOffers(page = 1) {\n    try {\n        const response = await fetch(`/admin/offers?page=${page}&size=${offersPerPage}&status=${sortStatus}`);\n        if (!response.ok) {\n            console.error(new Error(`Ошибка сервера: ${response.status}`));\n            showAlert(`Ошибка сервера: ${response.status}`, 'error')\n        }\n        const data = await response.json();\n        if (data.success && data[\"offers\"]) {\n            currentOfferPage = data[\"currentPage\"] || page;\n            totalOfferPages = data[\"totalPages\"] || 1;\n            totalOfferItems = data[\"totalItems\"] || data[\"offers\"].length;\n\n            renderOffersTable(data[\"offers\"]);\n            renderOfferPagePagination();\n        } else {\n            console.error(new Error(\"Неверный формат данных от AdminOfferController\"));\n            showAlert(\"Неверный формат данных от AdminOfferController\", 'error')\n        }\n    } catch (e) {\n        console.error(\"Ошибка при загрузке заявок:\", e);\n        const offerTableContainer = document.querySelector('#requests-tab .card-body');\n        if (offerTableContainer) {\n            offerTableContainer.innerHTML = `<div class=\"text-center py-4 text-danger\">Не удалось загрузить заявки.</div>`;\n        }\n    }\n}\n\n/**\n * Deletes an offer after user confirmation.\n * @param {string|number} offerId - The ID of the offer to delete.\n */\nasync function deleteOffer(offerId) {\n    // Use a more robust confirmation if a custom modal library is available\n    if (!confirm('Вы уверены, что хотите удалить эту заявку?')) {\n        return;\n    }\n\n    try {\n        const csrfToken = typeof getCsrfToken === 'function' ? getCsrfToken() : document.querySelector('meta[name=\"_csrf\"]')?.getAttribute('content') || '';\n        const response = await fetch(`/admin/offers/delete/${offerId}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRF-TOKEN': csrfToken\n            }\n        });\n\n        const result = await response.json();\n\n        if (response.ok && result.success) {\n            // Use a more robust alert if a custom one is available\n            showAlert('Заявка успешно удалена!', 'success');\n            void loadOffers(currentOfferPage); // Refresh the list\n        } else {\n            showAlert(result.error || 'Ошибка при удалении заявки', 'error');\n        }\n    } catch (error) {\n        console.error('Ошибка удаления заявки:', error);\n        showAlert('Ошибка сервера', 'error');\n    }\n}\n\n/**\n * Renders the main table of offers.\n * @param {Array<object>} offers - The array of offer objects to render.\n */\nfunction renderOffersTable(offers) {\n    const offerTableContainer = document.querySelector('#requests-tab .card-body');\n    if (!offerTableContainer) {\n        console.error('Контейнер для таблицы заявок не найден');\n        return;\n    }\n\n    offerTableContainer.innerHTML = `\n    <div class=\"offers-table-container\">\n        <div class=\"data-table offers-table\">\n            <div class=\"table-header d-flex justify-content-between align-items-center\">\n                <h3 class=\"table-title\">Список заявок</h3>\n                <div class=\"table-header-actions d-flex align-items-center\" style=\"gap: 1rem;\">\n                    <div class=\"input-group\">\n                        <span class=\"input-group-text\"><i class=\"bi bi-funnel\"></i></span>\n                        <select class=\"form-select form-select-sm\" id=\"statusFilter\">\n                            <option value=\"all\" ${sortStatus === 'all' ? 'selected' : ''}>Все статусы</option>\n                            <option value=\"PENDING\" ${sortStatus === 'PENDING' ? 'selected' : ''}>На рассмотрении</option>\n                            <option value=\"APPROVED\" ${sortStatus === 'APPROVED' ? 'selected' : ''}>Одобреные</option>\n                            <option value=\"COMPLETED\" ${sortStatus === 'COMPLETED' ? 'selected' : ''}>Выполненые</option>\n                            <option value=\"REJECTED\" ${sortStatus === 'REJECTED' ? 'selected' : ''}>Отклоненные</option>\n                        </select>\n                    </div>\n                    <div class=\"input-group\">\n                        <span class=\"input-group-text\">Показывать</span>\n                        <select class=\"form-select form-select-sm\" id=\"pageSizeSelect\">\n                            <option value=\"5\" ${offersPerPage === 5 ? 'selected' : ''}>5</option>\n                            <option value=\"10\" ${offersPerPage === 10 ? 'selected' : ''}>10</option>\n                            <option value=\"20\" ${offersPerPage === 20 ? 'selected' : ''}>20</option>\n                            <option value=\"50\" ${offersPerPage === 50 ? 'selected' : ''}>50</option>\n                        </select>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"table-content\" id=\"offersTableContent\">\n                <!-- Table Header -->\n                <div class=\"table-row header-row\">\n                    <div class=\"table-cell\">ID</div>\n                    <div class=\"table-cell\">Пользователь</div>\n                    <div class=\"table-cell\">Тема</div>\n                    <div class=\"table-cell\">Описание</div>\n                    <div class=\"table-cell\">Ответ</div>\n                    <div class=\"table-cell\">Статус</div>\n                    <div class=\"table-cell\">Создана</div>\n                    <div class=\"table-cell\">Обновлена</div>\n                    <div class=\"table-cell\">Действия</div>\n                </div>\n\n                <!-- Offer Rows -->\n                ${offers.length > 0 ? offers.map(offer => `\n                <div class=\"table-row\">\n                    <div class=\"table-cell text-muted\">#${offer.id || 'N/A'}</div>\n                    <div class=\"table-cell\">\n                        <div class=\"fw-bold\">${offer[\"fio\"] || 'N/A'}</div>\n                    </div>\n                    <div class=\"table-cell\">\n                        <div class=\"fw-bold\">${offer.topic || 'N/A'}</div>\n                    </div>\n                    <div class=\"table-cell\">\n                        <span class=\"course-description\">${offer.description || 'N/A'}</span>\n                    </div>\n                    <div class=\"table-cell\">\n                        <span class=\"course-description\">${offer.response || 'Нет ответа'}</span>\n                    </div>\n                    <div class=\"table-cell\">${convertStatusIntoBadge(offer.status)}</div>\n                    <div class=\"table-cell text-sm text-muted\">${extractDate(offer[\"createdAt\"])}</div>\n                    <div class=\"table-cell text-sm text-muted\">${extractDate(offer[\"updatedAt\"])}</div>\n                    <div class=\"table-cell action-buttons justify-content-center\">\n                        ${createOfferResponseButton(offer)}\n                        <button class=\"btn btn-danger btn-icon btn-sm\" title=\"Удалить\" data-action=\"delete-offer\" data-offer-id=\"${offer.id}\">\n                            <i class=\"bi bi-trash\"></i>\n                        </button>\n                    </div>\n                </div>\n                `).join('') : `\n                <div class=\"table-row\" style=\"grid-template-columns: 1fr;\">\n                    <div class=\"text-center py-4 text-muted\">\n                        <i class=\"bi bi-inbox fs-3 d-block mb-2\"></i>\n                        Заявки не найдены\n                    </div>\n                </div>\n                `}\n            </div>\n        </div>\n    </div>`;\n    bindOfferTableEvents(); // Bind events after rendering\n}\n\n/**\n * Renders the pagination controls for the offers table.\n */\nfunction renderOfferPagePagination() {\n    let offerPaginationContainer = document.querySelector('.pagination-container-edit-offers');\n    if (!offerPaginationContainer) {\n        const mainContainer = document.querySelector('#requests-tab .card-body');\n        if (mainContainer) {\n            const paginationDiv = document.createElement('div');\n            paginationDiv.className = 'pagination-container-edit-offers mt-3';\n            mainContainer.appendChild(paginationDiv);\n            offerPaginationContainer = paginationDiv;\n        } else {\n            console.error('Основной контейнер для таблицы заявок не найден, пагинация не будет отображена.');\n            return;\n        }\n    }\n\n    if (totalOfferPages <= 1) {\n        offerPaginationContainer.innerHTML = '';\n        return;\n    }\n\n    let offerPaginationHTML = `\n        <nav aria-label=\"Page navigation\">\n            <ul class=\"pagination justify-content-center\">\n                <!-- Previous Button -->\n                <li class=\"page-item ${currentOfferPage === 1 ? 'disabled' : ''}\">\n                    <a class=\"page-link\" href=\"#\" data-action=\"change-page\" data-page-number=\"${currentOfferPage - 1}\" aria-label=\"Previous\">\n                        <span aria-hidden=\"true\">&laquo;</span>\n                    </a>\n                </li>`;\n\n    const maxVisiblePages = 5;\n    let offerStartPage = Math.max(1, currentOfferPage - Math.floor(maxVisiblePages / 2));\n    let offerEndPage = Math.min(totalOfferPages, offerStartPage + maxVisiblePages - 1);\n\n    if (offerEndPage - offerStartPage + 1 < maxVisiblePages) {\n        offerStartPage = Math.max(1, offerEndPage - maxVisiblePages + 1);\n    }\n\n    if (offerStartPage > 1) {\n        offerPaginationHTML += `<li class=\"page-item\"><a class=\"page-link\" href=\"#\" data-action=\"change-page\" data-page-number=\"1\">1</a></li>`;\n        if (offerStartPage > 2) {\n            offerPaginationHTML += `<li class=\"page-item disabled\"><span class=\"page-link\">...</span></li>`;\n        }\n    }\n\n    for (let i = offerStartPage; i <= offerEndPage; i++) {\n        offerPaginationHTML += `\n            <li class=\"page-item ${i === currentOfferPage ? 'active' : ''}\">\n                <a class=\"page-link\" href=\"#\" data-action=\"change-page\" data-page-number=\"${i}\">${i}</a>\n            </li>`;\n    }\n\n    if (offerEndPage < totalOfferPages) {\n        if (offerEndPage < totalOfferPages - 1) {\n            offerPaginationHTML += `<li class=\"page-item disabled\"><span class=\"page-link\">...</span></li>`;\n        }\n        offerPaginationHTML += `<li class=\"page-item\"><a class=\"page-link\" href=\"#\" data-action=\"change-page\" data-page-number=\"${totalOfferPages}\">${totalOfferPages}</a></li>`;\n    }\n\n    offerPaginationHTML += `\n                <!-- Next Button -->\n                <li class=\"page-item ${currentOfferPage === totalOfferPages ? 'disabled' : ''}\">\n                    <a class=\"page-link\" href=\"#\" data-action=\"change-page\" data-page-number=\"${currentOfferPage + 1}\" aria-label=\"Next\">\n                        <span aria-hidden=\"true\">&raquo;</span>\n                    </a>\n                </li>\n            </ul>\n        </nav>\n        <div class=\"pagination-info text-center mt-2\">\n            <small class=\"text-muted\">Страница ${currentOfferPage} из ${totalOfferPages} • Всего заявок: ${totalOfferItems}</small>\n        </div>`;\n\n    offerPaginationContainer.innerHTML = offerPaginationHTML;\n    bindOfferPaginationEvents(); // Bind events after rendering\n}\n\n/**\n * Binds event listeners for the offers table (filters, actions).\n */\nfunction bindOfferTableEvents() {\n    const statusFilter = document.getElementById('statusFilter');\n    if (statusFilter) {\n        statusFilter.addEventListener('change', (event) => {\n            sortStatus = event.target.value;\n            void loadOffers(1); // Reset to first page\n        });\n    }\n\n    const pageSizeSelect = document.getElementById('pageSizeSelect');\n    if (pageSizeSelect) {\n        pageSizeSelect.addEventListener('change', (event) => {\n            offersPerPage = parseInt(event.target.value, 10);\n            void loadOffers(1); // Reset to first page\n        });\n    }\n\n    const tableContent = document.getElementById('offersTableContent');\n    if (tableContent) {\n        tableContent.addEventListener('click', (event) => {\n            const target = event.target.closest('button[data-action=\"delete-offer\"]');\n            if (target) {\n                const offerId = target.dataset.offerId;\n                void deleteOffer(offerId);\n            }\n        });\n    }\n}\n\n/**\n * Binds event listeners for the pagination controls.\n */\nfunction bindOfferPaginationEvents() {\n    const offerPaginationContainer = document.querySelector('.pagination-container-edit-offers');\n    if (offerPaginationContainer) {\n        offerPaginationContainer.addEventListener('click', (event) => {\n            event.preventDefault();\n            const target = event.target.closest('a[data-action=\"change-page\"]');\n            if (target) {\n                const pageNumber = parseInt(target.dataset.pageNumber, 10);\n                if (!isNaN(pageNumber)) {\n                    changeOfferPage(pageNumber);\n                }\n            }\n        });\n    }\n}\n\n/**\n * Changes the current page of offers.\n * @param {number} page - The page number to switch to.\n */\nfunction changeOfferPage(page) {\n    if (page < 1 || page > totalOfferPages || page === currentOfferPage) {\n        return;\n    }\n    void loadOffers(page);\n}\n\n/**\n * Formats a date string into YYYY-MM-DD.\n * @param {string} dateString - The input date string.\n * @returns {string} The formatted date.\n */\nfunction extractDate(dateString) {\n    if (!dateString) return 'N/A';\n    try {\n        return new Date(dateString).toISOString().split('T')[0];\n    } catch (e) {\n        return dateString; // Return original if parsing fails\n    }\n}\n\n/**\n * Converts an offer status string into a colored Bootstrap badge.\n * @param {string} status - The status string (e.g., 'PENDING').\n * @returns {string} The HTML for the badge.\n */\nfunction convertStatusIntoBadge(status) {\n    switch (status) {\n        case 'PENDING':\n            return '<span class=\"status-badge status-pending\">Не рассмотрена</span>';\n        case 'REJECTED':\n            return '<span class=\"status-badge status-rejected\">Отклонена</span>';\n        case 'APPROVED':\n            return '<span class=\"status-badge status-review\">Одобрена</span>';\n        case 'COMPLETED':\n            return '<span class=\"status-badge status-completed\">Выполнена</span>';\n        default:\n            return `<span class=\"status-badge\">${status || 'N/A'}</span>`;\n    }\n}\n\n// Initial load when the DOM is ready and the tab is visible.\ndocument.addEventListener('DOMContentLoaded', function () {\n    // This assumes the tab is visible on load. A more robust solution might\n    // use a MutationObserver or a custom event when the tab is shown.\n    const offersTab = document.getElementById('requests-tab');\n    if (offersTab) {\n        void loadOffers(1);\n    }\n});\n\n// Expose functions to the global scope if they are called from other scripts\n// or legacy inline handlers we might have missed.\nwindow.loadOffers = loadOffers;","// offerModal.js - Merged functionality for handling offer responses.\n\nlet currentOffer = null;\n\n// --- INITIALIZATION ---\n\n// Initialize event listeners when the DOM is fully loaded.\ndocument.addEventListener('DOMContentLoaded', initOfferModal);\n\n/**\n * Initializes all event listeners for the offer response modal.\n */\nfunction initOfferModal() {\n    const modalElement = document.getElementById('offerResponseModal');\n    // The form ID is 'adminUpdateForm' from admin.ftlh.\n    const responseForm = document.getElementById('adminUpdateForm');\n\n    if (modalElement) {\n        // Use event delegation for all buttons that open the response modal.\n        document.body.addEventListener('click', handleOpenModalClick);\n        // Clear the form when the modal is closed.\n        modalElement.addEventListener('hidden.bs.modal', clearModalForm);\n    }\n\n    if (responseForm) {\n        // Handle the form submission.\n        responseForm.addEventListener('submit', handleSubmitResponse);\n    }\n}\n\n\n// --- EVENT HANDLERS ---\n\n/**\n * Handles clicks on the body to open the modal if the target is a response button.\n * @param {Event} event - The click event.\n */\nfunction handleOpenModalClick(event) {\n    const button = event.target.closest('.js-open-response-modal');\n    if (button) {\n        const offerData = {\n            id: button.dataset.id,\n            description: button.dataset.description,\n            response: button.dataset.response,\n            status: button.dataset.status\n        };\n        openOfferResponseModal(offerData);\n    }\n}\n\n/**\n * Handles the submission of the offer response form.\n * @param {Event} event - The submit event.\n */\nasync function handleSubmitResponse(event) {\n    event.preventDefault();\n\n    const form = event.target;\n    const offerId = form.querySelector('#offerId').value;\n    const status = form.querySelector('#responseStatus').value;\n    const responseText = form.querySelector('#responseText').value;\n\n    const updateData = {\n        offerId: offerId,\n        status: status,\n        response: responseText.trim()\n    };\n\n    const submitBtn = form.querySelector('button[type=\"submit\"]');\n    const originalText = submitBtn.innerHTML;\n\n    try {\n        submitBtn.disabled = true;\n        submitBtn.innerHTML = '<span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> Обновление...';\n\n        const response = await fetch('/admin/updateOffer', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRF-TOKEN': getCsrfToken()\n            },\n            body: JSON.stringify(updateData)\n        });\n\n        const result = await response.json();\n\n        if (!response.ok) {\n            const errorMessage = result.errors\n                ? 'Ошибки валидации:\\n' + Object.values(result.errors).join('\\n')\n                : `Ошибка: ${result.message || 'Неизвестная ошибка'}`;\n            showAlert(errorMessage, 'error');\n            return;\n        }\n\n        showAlert('Заявка успешно обновлена!', 'success');\n        const modal = bootstrap.Modal.getInstance(document.getElementById('offerResponseModal'));\n        modal.hide();\n\n        // Refresh the offers list if the function exists.\n        if (typeof loadOffers === 'function') {\n            loadOffers();\n        }\n\n    } catch (error) {\n        console.error('Error updating offer:', error);\n        showAlert('Ошибка сервера', 'error');\n    } finally {\n        submitBtn.disabled = false;\n        submitBtn.innerHTML = originalText;\n    }\n}\n\n\n// --- MODAL AND FORM LOGIC ---\n\n/**\n * Opens the modal and populates it with the offer data.\n * @param {object} offerData - The data for the offer.\n */\nfunction openOfferResponseModal(offerData) {\n    currentOffer = offerData;\n    populateModalForm(offerData);\n\n    const modal = new bootstrap.Modal(document.getElementById('offerResponseModal'));\n    modal.show();\n}\n\n/**\n * Fills the modal's form with data from the selected offer.\n * @param {object} offerData - The data for the offer.\n */\nfunction populateModalForm(offerData) {\n    document.getElementById('responseOfferId').textContent = offerData.id;\n    document.getElementById('offerId').value = offerData.id;\n    document.getElementById('responseDescription').textContent = offerData.description || 'Описание отсутствует';\n    document.getElementById('responseStatus').value = offerData.status || 'PENDING';\n    document.getElementById('responseText').value = offerData.response || '';\n}\n\n/**\n * Clears the form fields and resets the state.\n */\nfunction clearModalForm() {\n    const form = document.getElementById('adminUpdateForm');\n    if (form) {\n        form.reset(); // Resets all form fields\n    }\n    // Manually clear elements not part of the form if needed\n    document.getElementById('responseOfferId').textContent = '';\n    document.getElementById('responseDescription').textContent = 'Описание отсутствует';\n    currentOffer = null;\n}\n\n\n// --- UTILITY FUNCTIONS ---\n\n/**\n * Creates the HTML for the response button.\n * @param {object} offer - The offer object.\n * @returns {string} HTML string for the button.\n */\nfunction createOfferResponseButton(offer) {\n    return `\n        <button class=\"btn btn-info btn-icon btn-sm js-open-response-modal\"\n                title=\"Ответить\"\n                data-id=\"${offer.id}\"\n                data-description=\"${escapeHtml(offer.description || '')}\"\n                data-response=\"${escapeHtml(offer.response || '')}\"\n                data-status=\"${offer.status}\">\n            <i class=\"bi bi-reply\"></i>\n        </button>\n    `;\n}\n\n/**\n * Gets the CSRF token from the page's meta tags.\n * @returns {string} The CSRF token.\n */\nfunction getCsrfToken() {\n    return document.querySelector('meta[name=\"_csrf\"]')?.getAttribute('content') || '';\n}\n\n/**\n * Escapes HTML special characters to prevent XSS.\n * @param {string} text - The string to escape.\n * @returns {string} The escaped string.\n */\nfunction escapeHtml(text) {\n    if (typeof text !== 'string') return '';\n    const map = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#039;'\n    };\n    return text.replace(/[&<>\"]|'(?!$)/g, m => map[m]);\n}\n\n// --- GLOBAL EXPOSURE ---\n\n// Expose functions to the global scope if they need to be called from inline scripts or other modules.\nwindow.openOfferResponseModal = openOfferResponseModal;\nwindow.createOfferResponseButton = createOfferResponseButton;\n","// Глобальные переменные для хранения данных\nlet currentEditingUser = null;\n\n// Функция открытия модального окна редактирования\nasync function openEditUserModal(userId) {\n    try {\n        // Загружаем данные пользователя\n        const userResponse = await fetch(`/admin/user/${userId}`);\n        if (!userResponse.ok) throw new Error('Ошибка загрузки данных пользователя');\n\n        const userData = await userResponse.json();\n        if (!userData.success) throw new Error(userData.message || 'Ошибка данных пользователя');\n\n        currentEditingUser = userData.data;\n        console.log(currentEditingUser);\n\n\n        const modalElement = document.getElementById('editUserModal');\n        if (!modalElement) {\n            throw new Error('Модальное окно не найдено в DOM');\n        }\n\n        // Показываем модальное окно\n        const modal = new bootstrap.Modal(modalElement);\n\n        $('#editUserName').text(`${currentEditingUser[\"firstName\"]} ${currentEditingUser[\"lastName\"]}`);\n        $('#editUserUsername').text(`${currentEditingUser.username}`);\n        $('#editUserDepartment').val(`${currentEditingUser['department']}`);\n        $('#editUserJobTitle').val(`${currentEditingUser['jobTitle']}`);\n        $('#editUserQualification').val(`${currentEditingUser['qualification']}`);\n        $('#userIdForUpdate').val(`${currentEditingUser['id']}`);\n\n        // noinspection JSUnresolvedReference\n        modal.show();\n\n    } catch (error) {\n        console.error('Ошибка открытия модального окна:', error);\n        showAlert('Не удалось открыть форму редактирования', 'error');\n    }\n}\n\n// Сохранение изменений\nasync function saveUserChanges() {\n    try {\n        const formData = {\n            userId: document.getElementById('userIdForUpdate').value,\n            department: document.getElementById('editUserDepartment').value,\n            jobTitle: document.getElementById('editUserJobTitle').value,\n            qualification: document.getElementById('editUserQualification').value,\n            role: document.getElementById('editUserRole').value\n        };\n\n        console.log(formData);\n\n        const response = await fetch('/admin/user/update', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRF-TOKEN': getCsrfToken()\n            },\n            body: JSON.stringify(formData)\n        });\n\n        const result = await response.json();\n        console.log(result);\n\n        if (response.ok && result.success) {\n            showAlert('Данные успешно обновлены!', 'success');\n\n            // Закрываем модальное окно\n            const modal = bootstrap.Modal.getInstance(document.getElementById('editUserModal'));\n            modal.hide();\n\n            // Обновляем таблицу пользователей\n            void loadUsers();\n\n        } else {\n            // Обработка ошибок валидации\n            if (result.errors) {\n                displayValidationErrors(result.errors);\n            } else {\n                showAlert(result.error || 'Ошибка при сохранении данных', 'error');\n            }\n        }\n\n    } catch (error) {\n        console.error('Ошибка сохранения:', error);\n        showAlert('Произошла ошибка при сохранении данных', 'error');\n    }\n}\n\n// Функция для отображения ошибок валидации\nfunction displayValidationErrors(errors) {\n    let errorMessages = [];\n\n    // Проходим по всем ошибкам и собираем сообщения\n    for (const [field, message] of Object.entries(errors)) {\n        errorMessages.push(`${getFieldDisplayName(field)}: ${message}`);\n    }\n\n    if (errorMessages.length > 0) {\n        showAlert('Ошибки валидации:\\n' + errorMessages.join('\\n'), 'error');\n    }\n}\n\n// Функция для получения читаемого имени поля\nfunction getFieldDisplayName(field) {\n    const fieldNames = {\n        'userId': 'ID пользователя',\n        'department': 'Отдел',\n        'jobTitle': 'Должность',\n        'qualification': 'Квалификация',\n        'role': 'Роль'\n    };\n\n    return fieldNames[field] || field;\n}\n\n// Функция для получения CSRF токена\nfunction getCsrfToken() {\n    return document.querySelector('meta[name=\"_csrf\"]')?.getAttribute('content') || '';\n}\n\n// Инициализация при загрузке страницы\ndocument.addEventListener('DOMContentLoaded', function() {\n    document.getElementById('saveUserChangesBtn').addEventListener('click', saveUserChanges);\n});\n\n// Обновите функцию editUser в основном скрипте\nfunction editUser(userId) {\n    void openEditUserModal(userId);\n}\n\nwindow.editUser = editUser;\n","let currentPageUsers = 1;\nlet totalPagesUsers = 1;\nlet totalItemsUsers = 0;\nlet usersPerPage = 10; // Default page size\nlet roleFilter = 'ALL'; // Default role filter\n\nasync function loadUsers(page = 1, size = usersPerPage, role = roleFilter) {\n    console.log(\"Refresh button clicked. Calling loadUsers.\"); // Added for debugging\n    try {\n        console.log(`Загрузка пользователей: страница ${page}, размер ${size}, роль ${role}`);\n        const response = await fetch(`/admin/users?page=${page}&size=${size}&role=${role}`);\n\n        if (response.ok) {\n            const data = await response.json();\n            if (data.success && data.data) {\n                currentPageUsers = data.data.currentPage || page;\n                totalPagesUsers = data.data.totalPages || 1;\n                totalItemsUsers = data.data.totalItems || data.data.content.length;\n\n                renderUsersTable(data.data.content);\n            } else {\n                throw new Error(\"Неверный формат данных от сервера\");\n            }\n        } else {\n            throw new Error(`Ошибка сервера: ${response.status}`);\n        }\n    } catch (e) {\n        console.error('Ошибка загрузки пользователей:', e);\n        showError('Не удалось загрузить данные пользователей');\n    }\n}\n\nfunction rowsInUserTable(size) {\n    usersPerPage = parseInt(size, 10);\n    loadUsers(1, usersPerPage, roleFilter);\n}\n\nfunction filterByUserRole(role) {\n    roleFilter = role;\n    loadUsers(1, usersPerPage, roleFilter);\n}\n\nasync function deleteUsersRequest(userId) {\n    try {\n        const body = JSON.stringify({ userId: userId });\n        const deleteRequest = await fetch(`/admin/users/delete`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: body\n        });\n\n        const response = await deleteRequest.json();\n\n        if (deleteRequest.ok) {\n            if (response.success) {\n                showAlert(response.message, 'success');\n                // Перезагружаем список пользователей\n                await loadUsers(currentPageUsers, usersPerPage, roleFilter);\n            } else {\n                showAlert(response.message, 'error');\n            }\n        } else {\n            showAlert(`Ошибка сервера: ${response.error || 'Неизвестная ошибка'}`, 'error');\n        }\n    } catch (error) {\n        showAlert(`Ошибка удаления: ${error.message}`, 'error');\n        console.error('Delete error:', error);\n    }\n}\n\nfunction renderUsersTable(users) {\n    const tableContainer = document.querySelector('#users-tab .card-body');\n    if (!tableContainer) {\n        console.error('Контейнер для таблицы не найден');\n        return;\n    }\n    tableContainer.innerHTML = '';\n\n    const tableHTML = `\n    <div class=\"users-table-container\">\n        <div class=\"data-table users-table\">\n            <div class=\"table-header d-flex justify-content-between align-items-center\">\n                <h3 class=\"table-title\">Список пользователей</h3>\n                <div class=\"table-header-actions d-flex align-items-center\" style=\"gap: 1rem;\">\n                    <div class=\"input-group\">\n                        <span class=\"input-group-text\"><i class=\"bi bi-people\"></i></span>\n                        <select class=\"form-select form-select-sm\" id=\"roleFilter\" onchange=\"filterByUserRole(this.value)\">\n                            <option value=\"ALL\" ${roleFilter === 'ALL' ? 'selected' : ''}>Все роли</option>\n                            <option value=\"USER\" ${roleFilter === 'USER' ? 'selected' : ''}>Пользователь</option>\n                            <option value=\"ADMIN\" ${roleFilter === 'ADMIN' ? 'selected' : ''}>Администратор</option>\n                        </select>\n                    </div>\n                    <div class=\"input-group\">\n                        <span class=\"input-group-text\">Показывать</span>\n                        <select class=\"form-select form-select-sm\" id=\"pageSizeSelect\" onchange=\"rowsInUserTable(this.value)\">\n                            <option value=\"5\" ${usersPerPage == 5 ? 'selected' : ''}>5</option>\n                            <option value=\"10\" ${usersPerPage == 10 ? 'selected' : ''}>10</option>\n                            <option value=\"20\" ${usersPerPage == 20 ? 'selected' : ''}>20</option>\n                            <option value=\"50\" ${usersPerPage == 50 ? 'selected' : ''}>50</option>\n                        </select>\n                    </div>\n                </div>\n            </div>\n            \n            <div class=\"table-content\">\n                <!-- Заголовок таблицы -->\n                <div class=\"table-row header-row\">\n                    <div class=\"table-cell\">ID</div>\n                    <div class=\"table-cell\">Аватар</div>\n                    <div class=\"table-cell\">Имя</div>\n                    <div class=\"table-cell\">Фамилия</div>\n                    <div class=\"table-cell\">Отдел</div>\n                    <div class=\"table-cell\">Должность</div>\n                    <div class=\"table-cell\">Квалификация</div>\n                    <div class=\"table-cell\">Логин</div>\n                    <div class=\"table-cell\">Создан</div>\n                    <div class=\"table-cell\">Роль</div>\n                    <div class=\"table-cell\">Действия</div>\n                </div>\n                \n                ${users.length > 0 ? users.map(user => `\n                    <div class=\"table-row\">\n                        <div class=\"table-cell text-muted\">#${user.id || 'N/A'}</div>\n                        <div class=\"table-cell\">\n                            <img src=\"/avatars/${user.avatar || 'avatar.png'}\" alt=\"Аватар\" class=\"user-avatar\">\n                        </div>\n                        <div class=\"table-cell\">${escapeHtml(user.firstName || 'Не указано')}</div>\n                        <div class=\"table-cell\">${escapeHtml(user.lastName || 'Не указано')}</div>\n                        <div class=\"table-cell\">${escapeHtml(user.department || 'Не указан')}</div>\n                        <div class=\"table-cell\">${escapeHtml(user.jobTitle || 'Не указана')}</div>\n                        <div class=\"table-cell\">\n                            <span class=\"status-badge ${getQualificationClass(user.qualification)}\">\n                                ${escapeHtml(user.qualification || 'Не указана')}\n                            </span>\n                        </div>\n                        <div class=\"table-cell\">${escapeHtml(user.username || 'Не указан')}</div>\n                        <div class=\"table-cell text-sm text-muted\">${formatDate(user.createdAt)}</div>\n                        <div class=\"table-cell\">${displayRoles(user.role)}</div>\n                        <div class=\"table-cell action-buttons justify-content-center\">\n                            <button class=\"btn btn-primary btn-icon btn-sm\" title=\"Редактировать\" onclick=\"editUser(${user.id})\">\n                                <i class=\"bi bi-pencil\"></i>\n                            </button>\n                            <button class=\"btn btn-danger btn-icon btn-sm\" title=\"Удалить\" onclick=\"deleteUser(${user.id})\">\n                                <i class=\"bi bi-trash\"></i>\n                            </button>\n                            <button class=\"btn btn-success btn-icon btn-sm\" title=\"Записать на курс\" onclick=\"openEnrollModal(${user.id}, '${escapeHtml(user.firstName)} ${escapeHtml(user.lastName)}')\">\n                                <i class=\"bi bi-plus-circle\"></i>\n                            </button>\n                            <button class=\"btn btn-info btn-icon btn-sm\" title=\"Просмотр курсов\" onclick=\"openViewCoursesModal(${user.id}, '${escapeHtml(user.firstName)} ${escapeHtml(user.lastName)}')\">\n                                <i class=\"bi bi-card-list\"></i>\n                            </button>\n                        </div>\n                    </div>\n                `).join('') : `\n                    <div class=\"table-row\" style=\"grid-template-columns: 1fr;\">\n                        <div class=\"text-center py-4 text-muted\">\n                            <i class=\"bi bi-inbox fs-3 d-block mb-2\"></i>\n                            Пользователи не найдены\n                        </div>\n                    </div>\n                `}\n            </div>\n        </div>\n    </div>\n        \n    <!-- Контейнер для пагинации -->\n    <div class=\"pagination-container mt-3\"></div>\n    \n    <!-- Кнопка обновления -->\n    <div class=\"text-center mt-3\">\n        <button class=\"btn btn-primary\" onclick=\"refreshUsersTable()\">\n            <i class=\"bi bi-arrow-repeat\"></i> Обновить список\n        </button>\n    </div>\n    `;\n\n    tableContainer.innerHTML = tableHTML;\n\n    const paginationContainer = document.querySelector('#users-tab .pagination-container');\n    if (!paginationContainer) {\n        console.error('Контейнер для пагинации не найден');\n        return;\n    }\n    if (totalPagesUsers <= 1) {\n        paginationContainer.innerHTML = '';\n        return;\n    }\n\n    let paginationHTML = `\n        <nav aria-label=\"Page navigation\">\n            <ul class=\"pagination justify-content-center\">\n                <li class=\"page-item ${currentPageUsers === 1 ? 'disabled' : ''}\">\n                    <a class=\"page-link\" href=\"#\" onclick=\"changeUsersPage(${currentPageUsers - 1}); return false;\" aria-label=\"Previous\">\n                        <span aria-hidden=\"true\">&laquo;</span>\n                    </a>\n                </li>\n    `;\n\n    const maxVisiblePages = 5;\n    let startPage = Math.max(1, currentPageUsers - Math.floor(maxVisiblePages / 2));\n    let endPage = Math.min(totalPagesUsers, startPage + maxVisiblePages - 1);\n\n    if (endPage - startPage + 1 < maxVisiblePages) {\n        startPage = Math.max(1, endPage - maxVisiblePages + 1);\n    }\n\n    if (startPage > 1) {\n        paginationHTML += `\n            <li class=\"page-item\">\n                <a class=\"page-link\" href=\"#\" onclick=\"changeUsersPage(1); return false;\">1</a>\n            </li>\n            ${startPage > 2 ? '<li class=\"page-item disabled\"><span class=\"page-link\">...</span></li>' : ''}\n        `;\n    }\n\n    for (let i = startPage; i <= endPage; i++) {\n        paginationHTML += `\n            <li class=\"page-item ${i === currentPageUsers ? 'active' : ''}\">\n                <a class=\"page-link\" href=\"#\" onclick=\"changeUsersPage(${i}); return false;\">${i}</a>\n            </li>\n        `;\n    }\n\n    if (endPage < totalPagesUsers) {\n        paginationHTML += `\n            ${endPage < totalPagesUsers - 1 ? '<li class=\"page-item disabled\"><span class=\"page-link\">...</span></li>' : ''}\n            <li class=\"page-item\">\n                <a class=\"page-link\" href=\"#\" onclick=\"changeUsersPage(${totalPagesUsers}); return false;\">${totalPagesUsers}</a>\n            </li>\n        `;\n    }\n\n    paginationHTML += `\n                <li class=\"page-item ${currentPageUsers === totalPagesUsers ? 'disabled' : ''}\">\n                    <a class=\"page-link\" href=\"#\" onclick=\"changeUsersPage(${currentPageUsers + 1}); return false;\" aria-label=\"Next\">\n                        <span aria-hidden=\"true\">&raquo;</span>\n                    </a>\n                </li>\n            </ul>\n        </nav>\n        \n        <div class=\"pagination-info text-center mt-2\">\n            <small class=\"text-muted\">\n                Страница ${currentPageUsers} из ${totalPagesUsers} • \n                Всего пользователей: ${totalItemsUsers}\n            </small>\n        </div>\n    `;\n    paginationContainer.innerHTML = paginationHTML;\n}\n\nfunction changeUsersPage(page) {\n    if (page < 1 || page > totalPagesUsers || page === currentPageUsers) return;\n    loadUsers(page, usersPerPage, roleFilter);\n}\n\n\n// Вспомогательные функции\nfunction escapeHtml(text) {\n    if (text === null || text === undefined) return '';\n    const div = document.createElement('div');\n    div.textContent = text;\n    return div.innerHTML;\n}\n\nfunction formatDate(dateString) {\n    if (!dateString) return 'Не указано';\n\n    try {\n        const date = new Date(dateString);\n        return date.toLocaleDateString('ru-RU', {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit'\n        });\n    } catch (e) {\n        return dateString;\n    }\n}\n\nfunction getQualificationClass(qualification) {\n    if (!qualification) return 'status-pending';\n\n    const qual = qualification.toLowerCase();\n    if (qual.includes('expert') || qual.includes('senior') || qual.includes('lead')) {\n        return 'status-completed';\n    } else if (qual.includes('middle') || qual.includes('intermediate')) {\n        return 'status-review';\n    } else if (qual.includes('junior') || qual.includes('trainee')) {\n        return 'status-pending';\n    } else {\n        return 'status-pending';\n    }\n}\n\nfunction displayRoles(role) {\n    return role === '[ROLE_USER]' ? 'Пользователь' : 'Администратор';\n}\n\nfunction showError(message) {\n    const tableContainer = document.querySelector('#users-tab .card-body');\n    if (tableContainer) {\n        tableContainer.innerHTML = `\n            <div class=\"alert alert-danger\" role=\"alert\">\n                <i class=\"fas fa-exclamation-triangle\"></i>\n                ${escapeHtml(message)}\n            </div>\n            <div style=\"text-align: center; margin-top: 1rem;\">\n                <button class=\"btn btn-primary\" onclick=\"loadUsers(1)\">\n                    <i class=\"fas fa-redo\"></i> Попробовать снова\n                </button>\n            </div>\n        `;\n    }\n}\n\nfunction deleteUser(userId) {\n    if (confirm('Вы уверены, что хотите удалить этого пользователя?')) {\n        deleteUsersRequest(userId)\n    }\n}\n\n// Функция для открытия модального окна\nasync function openEnrollModal(userId, userName) {\n    // 1. Устанавливаем имя и ID пользователя в модальном окне\n    document.getElementById('enrollUserName').textContent = userName;\n    document.getElementById('enrollUserId').value = userId;\n\n    const courseSelect = document.getElementById('courseSelect');\n    courseSelect.innerHTML = '<option>Загрузка курсов...</option>';\n\n    // 2. Показываем модальное окно\n    const modal = new bootstrap.Modal(document.getElementById('enrollUserModal'));\n    modal.show();\n\n    // 3. Загружаем список курсов с бэкенда\n    try {\n        const response = await fetch('/admin/courses');\n        const data = await response.json();\n        console.log(data)\n\n        if (data.success && data.data && data.data.content) {\n            courseSelect.innerHTML = ''; // Очищаем\n            if (data.data.content.length === 0) {\n                courseSelect.innerHTML = '<option>Нет доступных курсов</option>';\n            } else {\n                data.data.content.forEach(course => {\n                    const option = document.createElement('option');\n                    option.value = course.id;\n                    option.textContent = course.title;\n                    courseSelect.appendChild(option);\n                });\n            }\n        }\n    } catch (e) {\n        courseSelect.innerHTML = '<option>Ошибка загрузки курсов</option>';\n        console.error(e);\n    }\n}\n\n// Функция для подтверждения и отправки запроса\nasync function confirmEnrollment() {\n    const userId = document.getElementById('enrollUserId').value;\n    const courseId = document.getElementById('courseSelect').value;\n\n    if (!courseId || isNaN(courseId)) {\n        alert('Пожалуйста, выберите курс.');\n        return;\n    }\n\n    const requestData = {\n        userId: parseInt(userId),\n        courseId: parseInt(courseId)\n    };\n\n    console.log(\"enrollment data \",requestData)\n\n    try {\n        const response = await fetch('/admin/user/enroll', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(requestData)\n        });\n\n        const result = await response.json();\n\n        if (response.ok && result.success) {\n            showAlert(result.message);\n            // Закрываем модальное окно\n            const modal = bootstrap.Modal.getInstance(document.getElementById('enrollUserModal'));\n            modal.hide();\n        } else {\n            showAlert(`Ошибка: ${result.message || 'Не удалось записать пользователя.'}`, 'error');\n        }\n    } catch (e) {\n        showAlert('Ошибка сервера', 'error');\n        console.error(e);\n    }\n}\n\nasync function openViewCoursesModal(userId, userName) {\n    document.getElementById('viewUserName').textContent = userName;\n    const userCoursesList = document.getElementById('userCoursesList');\n    userCoursesList.innerHTML = '<li class=\"list-group-item\">Загрузка курсов...</li>';\n\n    // Сохраняем данные для перезагрузки\n    userCoursesList.dataset.userId = userId;\n    userCoursesList.dataset.userName = userName;\n\n    const modal = new bootstrap.Modal(document.getElementById('viewUserCoursesModal'));\n    modal.show();\n\n    await refreshUserCoursesList(userId, userName);\n}\n\nasync function refreshUserCoursesList(userId, userName) {\n    const userCoursesList = document.getElementById('userCoursesList');\n    userCoursesList.innerHTML = '<li class=\"list-group-item\">Загрузка курсов...</li>';\n\n    try {\n        const response = await fetch(`/admin/user/${userId}/courses`);\n        const data = await response.json();\n\n        if (data.success && data.data) {\n            userCoursesList.innerHTML = '';\n            if (data.data.length === 0) {\n                userCoursesList.innerHTML = '<li class=\"list-group-item\">Пользователь не записан ни на один курс.</li>';\n            } else {\n                data.data.forEach(course => {\n                    const listItem = document.createElement('li');\n                    listItem.className = 'list-group-item d-flex justify-content-between align-items-center';\n\n                    const titleSpan = document.createElement('span');\n                    titleSpan.textContent = course.title;\n                    listItem.appendChild(titleSpan);\n\n                    const unenrollButton = document.createElement('button');\n                    unenrollButton.className = 'btn btn-danger btn-sm';\n                    unenrollButton.textContent = 'Отписать';\n                    unenrollButton.onclick = () => confirmUnenrollment(userId, userName, course.id, course.title);\n                    listItem.appendChild(unenrollButton);\n\n                    userCoursesList.append(listItem);\n                });\n            }\n        } else {\n            userCoursesList.innerHTML = '<li class=\"list-group-item text-danger\">Ошибка загрузки курсов.</li>';\n            console.error('Failed to load user courses:', data.error);\n        }\n    } catch (e) {\n        userCoursesList.innerHTML = '<li class=\"list-group-item text-danger\">Ошибка сервера.</li>';\n        console.error('Network error loading user courses:', e);\n    }\n}\n\nfunction confirmUnenrollment(userId, userName, courseId, courseTitle) {\n    const message = `Вы уверены, что хотите отписать пользователя \"${userName}\" от курса \"${courseTitle}\"?`;\n    if (confirm(message)) {\n        unenrollRequest(userId, courseId, userName);\n    }\n}\n\nasync function unenrollRequest(userId, courseId, userName) {\n    const requestData = { userId, courseId };\n\n    try {\n        const response = await fetch('/admin/user/unenroll', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(requestData)\n        });\n\n        const result = await response.json();\n\n        if (response.ok && result.success) {\n            alert(result.message);\n            // Обновляем список курсов в модальном окне\n            await refreshUserCoursesList(userId, userName);\n        } else {\n            showAlert(`Ошибка: ${result.message || 'Не удалось отписать пользователя.'}`, 'error');\n        }\n    } catch (e) {\n        showAlert('Ошибка сервера', 'error');\n        console.error(e);\n    }\n}\n\n// Инициализация\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    // Загружаем пользователей при загрузке страницы\n    const usersTab = document.getElementById('users-tab');\n    if (usersTab) {\n        loadUsers(1, usersPerPage, roleFilter);\n    }\n});\n\n// Expose functions to global scope for onclick attributes\nwindow.loadUsers = loadUsers;\nwindow.deleteUser = deleteUser;\nwindow.openEnrollModal = openEnrollModal;\nwindow.confirmEnrollment = confirmEnrollment;\nwindow.openViewCoursesModal = openViewCoursesModal;\nwindow.confirmUnenrollment = confirmUnenrollment;\nwindow.unenrollRequest = unenrollRequest;\nwindow.changeUsersPage = changeUsersPage;\nwindow.currentPageUsers = currentPageUsers;\nwindow.rowsInUserTable = rowsInUserTable;\nwindow.filterByUserRole = filterByUserRole;\nwindow.refreshUsersTable = function() {\n    loadUsers(currentPageUsers, usersPerPage, roleFilter);\n};"],"names":[],"version":3,"file":"index.js.map"}